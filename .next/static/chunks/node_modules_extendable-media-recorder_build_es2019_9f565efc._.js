(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/node_modules/extendable-media-recorder/build/es2019/factories/blob-event-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createBlobEventFactory": (()=>createBlobEventFactory)
});
const createBlobEventFactory = (nativeBlobEventConstructor)=>{
    return (type, blobEventInit)=>{
        // Bug #14: Safari does not yet support the BlobEvent.
        if (nativeBlobEventConstructor === null) {
            const { data, ...eventInit } = blobEventInit;
            const fakeBlobEvent = new Event(type, eventInit);
            fakeBlobEvent.data = data;
            return fakeBlobEvent;
        }
        return new nativeBlobEventConstructor(type, blobEventInit);
    };
}; //# sourceMappingURL=blob-event-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/decode-web-m-chunk.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createDecodeWebMChunk": (()=>createDecodeWebMChunk)
});
const createDecodeWebMChunk = (readElementContent, readElementType)=>{
    return (dataView, elementType, channelCount)=>{
        const contents = [];
        let currentElementType = elementType;
        let offset = 0;
        while(offset < dataView.byteLength){
            if (currentElementType === null) {
                const lengthAndType = readElementType(dataView, offset);
                if (lengthAndType === null) {
                    break;
                }
                const { length, type } = lengthAndType;
                currentElementType = type;
                offset += length;
            } else {
                const contentAndLength = readElementContent(dataView, offset, currentElementType, channelCount);
                if (contentAndLength === null) {
                    break;
                }
                const { content, length } = contentAndLength;
                currentElementType = null;
                offset += length;
                if (content !== null) {
                    contents.push(content);
                }
            }
        }
        return {
            contents,
            currentElementType,
            offset
        };
    };
}; //# sourceMappingURL=decode-web-m-chunk.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/event-target-constructor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createEventTargetConstructor": (()=>createEventTargetConstructor)
});
const createEventTargetConstructor = (createEventTarget, wrapEventListener)=>{
    return class EventTarget {
        constructor(nativeEventTarget = null){
            this._listeners = new WeakMap();
            this._nativeEventTarget = nativeEventTarget === null ? createEventTarget() : nativeEventTarget;
        }
        addEventListener(type, listener, options) {
            if (listener !== null) {
                let wrappedEventListener = this._listeners.get(listener);
                if (wrappedEventListener === undefined) {
                    wrappedEventListener = wrapEventListener(this, listener);
                    if (typeof listener === 'function') {
                        this._listeners.set(listener, wrappedEventListener);
                    }
                }
                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);
            }
        }
        dispatchEvent(event) {
            return this._nativeEventTarget.dispatchEvent(event);
        }
        removeEventListener(type, listener, options) {
            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);
            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);
        }
    };
}; //# sourceMappingURL=event-target-constructor.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/event-target-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createEventTargetFactory": (()=>createEventTargetFactory)
});
const createEventTargetFactory = (window)=>{
    return ()=>{
        if (window === null) {
            throw new Error('A native EventTarget could not be created.');
        }
        return window.document.createElement('p');
    };
}; //# sourceMappingURL=event-target-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/invalid-modification-error.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createInvalidModificationError": (()=>createInvalidModificationError)
});
const createInvalidModificationError = (message = '')=>{
    try {
        return new DOMException(message, 'InvalidModificationError');
    } catch (err) {
        // @todo Edge is the only browser that does not yet allow to construct a DOMException.
        err.code = 13;
        err.message = message;
        err.name = 'InvalidModificationError';
        return err;
    }
}; //# sourceMappingURL=invalid-modification-error.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/invalid-state-error.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createInvalidStateError": (()=>createInvalidStateError)
});
const createInvalidStateError = ()=>{
    try {
        return new DOMException('', 'InvalidStateError');
    } catch (err) {
        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.
        err.code = 11;
        err.name = 'InvalidStateError';
        return err;
    }
}; //# sourceMappingURL=invalid-state-error.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/is-supported-promise.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createIsSupportedPromise": (()=>createIsSupportedPromise)
});
const createIsSupportedPromise = (window)=>{
    if (window !== null && window.MediaStream !== undefined && /*
         * Bug #10: An early experimental implemenation in Safari did not provide the isTypeSupported() function.
         */ (window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)) {
        /*
         * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an
         * audio codec.
         */ return new Promise((resolve)=>{
            // Bug #11 Safari does not yet support the MediaRecorder but that isn't tested here.
            if (window.MediaRecorder === undefined) {
                return resolve(true);
            }
            // @todo captureStream() is not defined yet.
            const canvasElement = document.createElement('canvas');
            // @todo https://bugzilla.mozilla.org/show_bug.cgi?id=1388974
            canvasElement.getContext('2d');
            if (typeof canvasElement.captureStream !== 'function') {
                return resolve(false);
            }
            const mediaStream = canvasElement.captureStream();
            const mimeType = 'audio/webm';
            try {
                const mediaRecorder = new window.MediaRecorder(mediaStream, {
                    mimeType
                });
                mediaRecorder.addEventListener('dataavailable', ({ data })=>resolve(data.type === mimeType));
                mediaRecorder.start();
                setTimeout(()=>mediaRecorder.stop(), 10);
            } catch (err) {
                resolve(err.name === 'NotSupportedError');
            }
        });
    }
    return Promise.resolve(false);
}; //# sourceMappingURL=is-supported-promise.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/media-recorder-constructor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createMediaRecorderConstructor": (()=>createMediaRecorderConstructor)
});
const createMediaRecorderConstructor = (createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, eventTargetConstructor, nativeMediaRecorderConstructor)=>{
    return class MediaRecorder extends eventTargetConstructor {
        constructor(stream, options = {}){
            const { mimeType } = options;
            if (nativeMediaRecorderConstructor !== null && // Bug #10: Safari does not yet implement the isTypeSupported() method.
            (mimeType === undefined || nativeMediaRecorderConstructor.isTypeSupported !== undefined && nativeMediaRecorderConstructor.isTypeSupported(mimeType))) {
                const internalMediaRecorder = createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);
                super(internalMediaRecorder);
                this._internalMediaRecorder = internalMediaRecorder;
            } else if (mimeType !== undefined && encoderRegexes.some((regex)=>regex.test(mimeType))) {
                super();
                // Bug #10: Safari does not yet implement the isTypeSupported() method.
                if (nativeMediaRecorderConstructor !== null && nativeMediaRecorderConstructor.isTypeSupported !== undefined && nativeMediaRecorderConstructor.isTypeSupported('audio/webm;codecs=pcm')) {
                    this._internalMediaRecorder = createWebmPcmMediaRecorder(this, nativeMediaRecorderConstructor, stream, mimeType);
                } else {
                    this._internalMediaRecorder = createWebAudioMediaRecorder(this, stream, mimeType);
                }
            } else {
                // This is creating a native MediaRecorder just to provoke it to throw an error.
                if (nativeMediaRecorderConstructor !== null) {
                    createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);
                }
                throw createNotSupportedError();
            }
            this._ondataavailable = null;
            this._onerror = null;
            this._onpause = null;
            this._onresume = null;
            this._onstart = null;
            this._onstop = null;
        }
        get mimeType() {
            return this._internalMediaRecorder.mimeType;
        }
        get ondataavailable() {
            return this._ondataavailable === null ? this._ondataavailable : this._ondataavailable[0];
        }
        set ondataavailable(value) {
            if (this._ondataavailable !== null) {
                this.removeEventListener('dataavailable', this._ondataavailable[1]);
            }
            if (typeof value === 'function') {
                const boundListener = value.bind(this);
                this.addEventListener('dataavailable', boundListener);
                this._ondataavailable = [
                    value,
                    boundListener
                ];
            } else {
                this._ondataavailable = null;
            }
        }
        get onerror() {
            return this._onerror === null ? this._onerror : this._onerror[0];
        }
        set onerror(value) {
            if (this._onerror !== null) {
                this.removeEventListener('error', this._onerror[1]);
            }
            if (typeof value === 'function') {
                const boundListener = value.bind(this);
                this.addEventListener('error', boundListener);
                this._onerror = [
                    value,
                    boundListener
                ];
            } else {
                this._onerror = null;
            }
        }
        get onpause() {
            return this._onpause === null ? this._onpause : this._onpause[0];
        }
        set onpause(value) {
            if (this._onpause !== null) {
                this.removeEventListener('pause', this._onpause[1]);
            }
            if (typeof value === 'function') {
                const boundListener = value.bind(this);
                this.addEventListener('pause', boundListener);
                this._onpause = [
                    value,
                    boundListener
                ];
            } else {
                this._onpause = null;
            }
        }
        get onresume() {
            return this._onresume === null ? this._onresume : this._onresume[0];
        }
        set onresume(value) {
            if (this._onresume !== null) {
                this.removeEventListener('resume', this._onresume[1]);
            }
            if (typeof value === 'function') {
                const boundListener = value.bind(this);
                this.addEventListener('resume', boundListener);
                this._onresume = [
                    value,
                    boundListener
                ];
            } else {
                this._onresume = null;
            }
        }
        get onstart() {
            return this._onstart === null ? this._onstart : this._onstart[0];
        }
        set onstart(value) {
            if (this._onstart !== null) {
                this.removeEventListener('start', this._onstart[1]);
            }
            if (typeof value === 'function') {
                const boundListener = value.bind(this);
                this.addEventListener('start', boundListener);
                this._onstart = [
                    value,
                    boundListener
                ];
            } else {
                this._onstart = null;
            }
        }
        get onstop() {
            return this._onstop === null ? this._onstop : this._onstop[0];
        }
        set onstop(value) {
            if (this._onstop !== null) {
                this.removeEventListener('stop', this._onstop[1]);
            }
            if (typeof value === 'function') {
                const boundListener = value.bind(this);
                this.addEventListener('stop', boundListener);
                this._onstop = [
                    value,
                    boundListener
                ];
            } else {
                this._onstop = null;
            }
        }
        get state() {
            return this._internalMediaRecorder.state;
        }
        pause() {
            return this._internalMediaRecorder.pause();
        }
        resume() {
            return this._internalMediaRecorder.resume();
        }
        start(timeslice) {
            return this._internalMediaRecorder.start(timeslice);
        }
        stop() {
            return this._internalMediaRecorder.stop();
        }
        static isTypeSupported(mimeType) {
            return nativeMediaRecorderConstructor !== null && // Bug #10: Safari does not yet implement the isTypeSupported() method.
            nativeMediaRecorderConstructor.isTypeSupported !== undefined && nativeMediaRecorderConstructor.isTypeSupported(mimeType) || encoderRegexes.some((regex)=>regex.test(mimeType));
        }
    };
}; //# sourceMappingURL=media-recorder-constructor.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/native-blob-event-constructor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createNativeBlobEventConstructor": (()=>createNativeBlobEventConstructor)
});
const createNativeBlobEventConstructor = (window)=>{
    if (window !== null && window.BlobEvent !== undefined) {
        return window.BlobEvent;
    }
    return null;
}; //# sourceMappingURL=native-blob-event-constructor.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createNativeMediaRecorderFactory": (()=>createNativeMediaRecorderFactory)
});
const createNativeMediaRecorderFactory = (createInvalidModificationError, createNotSupportedError)=>{
    return (nativeMediaRecorderConstructor, stream, mediaRecorderOptions)=>{
        const bufferedBlobs = [];
        const dataAvailableListeners = new WeakMap();
        const errorListeners = new WeakMap();
        const nativeMediaRecorder = new nativeMediaRecorderConstructor(stream, mediaRecorderOptions);
        const stopListeners = new WeakMap();
        let isActive = true;
        nativeMediaRecorder.addEventListener = ((addEventListener)=>{
            return (type, listener, options)=>{
                let patchedEventListener = listener;
                if (typeof listener === 'function') {
                    if (type === 'dataavailable') {
                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.
                        patchedEventListener = (event)=>{
                            setTimeout(()=>{
                                if (isActive && nativeMediaRecorder.state === 'inactive') {
                                    bufferedBlobs.push(event.data);
                                } else {
                                    if (bufferedBlobs.length > 0) {
                                        const blob = event.data;
                                        Object.defineProperty(event, 'data', {
                                            value: new Blob([
                                                ...bufferedBlobs,
                                                blob
                                            ], {
                                                type: blob.type
                                            })
                                        });
                                        bufferedBlobs.length = 0;
                                    }
                                    listener.call(nativeMediaRecorder, event);
                                }
                            });
                        };
                        dataAvailableListeners.set(listener, patchedEventListener);
                    } else if (type === 'error') {
                        // Bug #12 & #13: Firefox fires a regular event with an error property.
                        patchedEventListener = (event)=>{
                            // Bug #3 & #4: Chrome throws an error event without any error.
                            if (event.error === undefined) {
                                listener.call(nativeMediaRecorder, new ErrorEvent('error', {
                                    error: createInvalidModificationError()
                                }));
                            // Bug #1 & #2: Firefox throws an error event with an UnknownError.
                            } else if (event.error.name === 'UnknownError') {
                                const message = event.error.message;
                                listener.call(nativeMediaRecorder, new ErrorEvent('error', {
                                    error: createInvalidModificationError(message)
                                }));
                            } else if (event instanceof ErrorEvent) {
                                listener.call(nativeMediaRecorder, event);
                            } else {
                                listener.call(nativeMediaRecorder, new ErrorEvent('error', {
                                    error: event.error
                                }));
                            }
                        };
                        errorListeners.set(listener, patchedEventListener);
                    } else if (type === 'stop') {
                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.
                        patchedEventListener = (event)=>{
                            isActive = false;
                            setTimeout(()=>listener.call(nativeMediaRecorder, event));
                        };
                        stopListeners.set(listener, patchedEventListener);
                    }
                }
                return addEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);
            };
        })(nativeMediaRecorder.addEventListener);
        nativeMediaRecorder.dispatchEvent = ((dispatchEvent)=>{
            // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.
            return (event)=>{
                let wasActive;
                setTimeout(()=>{
                    wasActive = isActive;
                    isActive = false;
                });
                const returnValue = dispatchEvent.call(nativeMediaRecorder, event);
                setTimeout(()=>isActive = wasActive);
                return returnValue;
            };
        })(nativeMediaRecorder.dispatchEvent);
        nativeMediaRecorder.removeEventListener = ((removeEventListener)=>{
            return (type, listener, options)=>{
                let patchedEventListener = listener;
                if (typeof listener === 'function') {
                    if (type === 'dataavailable') {
                        const dataAvailableListener = dataAvailableListeners.get(listener);
                        if (dataAvailableListener !== undefined) {
                            patchedEventListener = dataAvailableListener;
                        }
                    } else if (type === 'error') {
                        const errorListener = errorListeners.get(listener);
                        if (errorListener !== undefined) {
                            patchedEventListener = errorListener;
                        }
                    } else if (type === 'stop') {
                        const stopListener = stopListeners.get(listener);
                        if (stopListener !== undefined) {
                            patchedEventListener = stopListener;
                        }
                    }
                }
                return removeEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);
            };
        })(nativeMediaRecorder.removeEventListener);
        nativeMediaRecorder.start = ((start)=>{
            return (timeslice)=>{
                /*
                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio
                 * codec.
                 */ if (mediaRecorderOptions.mimeType !== undefined && mediaRecorderOptions.mimeType.startsWith('audio/') && stream.getVideoTracks().length > 0) {
                    throw createNotSupportedError();
                }
                isActive = timeslice !== undefined;
                return timeslice === undefined ? start.call(nativeMediaRecorder) : start.call(nativeMediaRecorder, timeslice);
            };
        })(nativeMediaRecorder.start);
        return nativeMediaRecorder;
    };
}; //# sourceMappingURL=native-media-recorder.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder-constructor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createNativeMediaRecorderConstructor": (()=>createNativeMediaRecorderConstructor)
});
const createNativeMediaRecorderConstructor = (window)=>{
    if (window === null) {
        return null;
    }
    return window.MediaRecorder === undefined ? null : window.MediaRecorder;
}; //# sourceMappingURL=native-media-recorder-constructor.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/not-supported-error.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createNotSupportedError": (()=>createNotSupportedError)
});
const createNotSupportedError = ()=>{
    try {
        return new DOMException('', 'NotSupportedError');
    } catch (err) {
        // @todo Edge is the only browser that does not yet allow to construct a DOMException.
        err.code = 9;
        err.name = 'NotSupportedError';
        return err;
    }
}; //# sourceMappingURL=not-supported-error.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/read-element-content.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createReadElementContent": (()=>createReadElementContent)
});
const createReadElementContent = (readVariableSizeInteger)=>{
    return (dataView, offset, type, channelCount = 2)=>{
        const lengthAndValue = readVariableSizeInteger(dataView, offset);
        if (lengthAndValue === null) {
            return lengthAndValue;
        }
        const { length, value } = lengthAndValue;
        if (type === 'master') {
            return {
                content: null,
                length
            };
        }
        if (offset + length + value > dataView.byteLength) {
            return null;
        }
        if (type === 'binary') {
            const numberOfSamples = (value / Float32Array.BYTES_PER_ELEMENT - 1) / channelCount;
            const content = Array.from({
                length: channelCount
            }, ()=>new Float32Array(numberOfSamples));
            for(let i = 0; i < numberOfSamples; i += 1){
                const elementOffset = i * channelCount + 1;
                for(let j = 0; j < channelCount; j += 1){
                    content[j][i] = dataView.getFloat32(offset + length + (elementOffset + j) * Float32Array.BYTES_PER_ELEMENT, true);
                }
            }
            return {
                content,
                length: length + value
            };
        }
        return {
            content: null,
            length: length + value
        };
    };
}; //# sourceMappingURL=read-element-content.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/read-element-type.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createReadElementType": (()=>createReadElementType)
});
const createReadElementType = (readVariableSizeInteger)=>{
    return (dataView, offset)=>{
        const lengthAndValue = readVariableSizeInteger(dataView, offset);
        if (lengthAndValue === null) {
            return lengthAndValue;
        }
        const { length, value } = lengthAndValue;
        if (value === 35) {
            return {
                length,
                type: 'binary'
            };
        }
        if (value === 46 || value === 97 || value === 88713574 || value === 106212971 || value === 139690087 || value === 172351395 || value === 256095861) {
            return {
                length,
                type: 'master'
            };
        }
        return {
            length,
            type: 'unknown'
        };
    };
}; //# sourceMappingURL=read-element-type.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/read-variable-size-integer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createReadVariableSizeInteger": (()=>createReadVariableSizeInteger)
});
const createReadVariableSizeInteger = (readVariableSizeIntegerLength)=>{
    return (dataView, offset)=>{
        const length = readVariableSizeIntegerLength(dataView, offset);
        if (length === null) {
            return length;
        }
        const firstDataByteOffset = offset + Math.floor((length - 1) / 8);
        if (firstDataByteOffset + length > dataView.byteLength) {
            return null;
        }
        const firstDataByte = dataView.getUint8(firstDataByteOffset);
        let value = firstDataByte & (1 << 8 - length % 8) - 1; // tslint:disable-line:no-bitwise
        for(let i = 1; i < length; i += 1){
            value = (value << 8) + dataView.getUint8(firstDataByteOffset + i); // tslint:disable-line:no-bitwise
        }
        return {
            length,
            value
        };
    };
}; //# sourceMappingURL=read-variable-size-integer.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/web-audio-media-recorder.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createWebAudioMediaRecorderFactory": (()=>createWebAudioMediaRecorderFactory)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$media$2d$encoder$2d$host$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/media-encoder-host/build/es2019/module.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$recorder$2d$audio$2d$worklet$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/recorder-audio-worklet/build/es2019/module.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$recorder$2d$audio$2d$worklet$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/recorder-audio-worklet/build/es2019/module.js [app-client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$standardized$2d$audio$2d$context$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/standardized-audio-context/build/es2019/module.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$standardized$2d$audio$2d$context$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/standardized-audio-context/build/es2019/module.js [app-client] (ecmascript) <locals>");
;
;
;
const ERROR_MESSAGE = 'Missing AudioWorklet support. Maybe this is not running in a secure context.';
// @todo This should live in a separate file.
const createPromisedAudioNodesEncoderIdAndPort = async (audioBuffer, audioContext, channelCount, mediaStream, mimeType)=>{
    const { encoderId, port } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$media$2d$encoder$2d$host$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["instantiate"])(mimeType, audioContext.sampleRate);
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$standardized$2d$audio$2d$context$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AudioWorkletNode"] === undefined) {
        throw new Error(ERROR_MESSAGE);
    }
    const audioBufferSourceNode = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$standardized$2d$audio$2d$context$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AudioBufferSourceNode"](audioContext, {
        buffer: audioBuffer
    });
    const mediaStreamAudioSourceNode = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$standardized$2d$audio$2d$context$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["MediaStreamAudioSourceNode"](audioContext, {
        mediaStream
    });
    const recorderAudioWorkletNode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$recorder$2d$audio$2d$worklet$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["createRecorderAudioWorkletNode"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$standardized$2d$audio$2d$context$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AudioWorkletNode"], audioContext, {
        channelCount
    });
    return {
        audioBufferSourceNode,
        encoderId,
        mediaStreamAudioSourceNode,
        port,
        recorderAudioWorkletNode
    };
};
const createWebAudioMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError)=>{
    return (eventTarget, mediaStream, mimeType)=>{
        var _a;
        const sampleRate = (_a = mediaStream.getAudioTracks()[0]) === null || _a === void 0 ? void 0 : _a.getSettings().sampleRate;
        const audioContext = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$standardized$2d$audio$2d$context$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["MinimalAudioContext"]({
            latencyHint: 'playback',
            sampleRate
        });
        const length = Math.max(1024, Math.ceil(audioContext.baseLatency * audioContext.sampleRate));
        const audioBuffer = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$standardized$2d$audio$2d$context$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AudioBuffer"]({
            length,
            sampleRate: audioContext.sampleRate
        });
        const bufferedArrayBuffers = [];
        const promisedAudioWorkletModule = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$recorder$2d$audio$2d$worklet$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["addRecorderAudioWorkletModule"])((url)=>{
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$standardized$2d$audio$2d$context$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["addAudioWorkletModule"] === undefined) {
                throw new Error(ERROR_MESSAGE);
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$standardized$2d$audio$2d$context$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["addAudioWorkletModule"])(audioContext, url);
        });
        let abortRecording = null;
        let intervalId = null;
        let promisedAudioNodesAndEncoderId = null;
        let promisedPartialRecording = null;
        let isAudioContextRunning = true;
        const dispatchDataAvailableEvent = (arrayBuffers)=>{
            eventTarget.dispatchEvent(createBlobEvent('dataavailable', {
                data: new Blob(arrayBuffers, {
                    type: mimeType
                })
            }));
        };
        const requestNextPartialRecording = async (encoderId, timeslice)=>{
            const arrayBuffers = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$media$2d$encoder$2d$host$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encode"])(encoderId, timeslice);
            if (promisedAudioNodesAndEncoderId === null) {
                bufferedArrayBuffers.push(...arrayBuffers);
            } else {
                dispatchDataAvailableEvent(arrayBuffers);
                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);
            }
        };
        const resume = ()=>{
            isAudioContextRunning = true;
            return audioContext.resume();
        };
        const stop = ()=>{
            if (promisedAudioNodesAndEncoderId === null) {
                return;
            }
            if (abortRecording !== null) {
                mediaStream.removeEventListener('addtrack', abortRecording);
                mediaStream.removeEventListener('removetrack', abortRecording);
            }
            if (intervalId !== null) {
                clearTimeout(intervalId);
            }
            promisedAudioNodesAndEncoderId.then(async ({ constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode })=>{
                if (promisedPartialRecording !== null) {
                    promisedPartialRecording.catch(()=>{
                    /* @todo Only catch the errors caused by a duplicate call to encode. */ });
                    promisedPartialRecording = null;
                }
                await recorderAudioWorkletNode.stop();
                mediaStreamAudioSourceNode.disconnect(recorderAudioWorkletNode);
                constantSourceNode.stop();
                const arrayBuffers = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$media$2d$encoder$2d$host$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encode"])(encoderId, null);
                if (promisedAudioNodesAndEncoderId === null) {
                    await suspend();
                }
                dispatchDataAvailableEvent([
                    ...bufferedArrayBuffers,
                    ...arrayBuffers
                ]);
                bufferedArrayBuffers.length = 0;
                eventTarget.dispatchEvent(new Event('stop'));
            });
            promisedAudioNodesAndEncoderId = null;
        };
        const suspend = ()=>{
            isAudioContextRunning = false;
            return audioContext.suspend();
        };
        suspend();
        return {
            get mimeType () {
                return mimeType;
            },
            get state () {
                return promisedAudioNodesAndEncoderId === null ? 'inactive' : isAudioContextRunning ? 'recording' : 'paused';
            },
            pause () {
                if (promisedAudioNodesAndEncoderId === null) {
                    throw createInvalidStateError();
                }
                if (isAudioContextRunning) {
                    suspend();
                    eventTarget.dispatchEvent(new Event('pause'));
                }
            },
            resume () {
                if (promisedAudioNodesAndEncoderId === null) {
                    throw createInvalidStateError();
                }
                if (!isAudioContextRunning) {
                    resume();
                    eventTarget.dispatchEvent(new Event('resume'));
                }
            },
            start (timeslice) {
                var _a;
                if (promisedAudioNodesAndEncoderId !== null) {
                    throw createInvalidStateError();
                }
                if (mediaStream.getVideoTracks().length > 0) {
                    throw createNotSupportedError();
                }
                eventTarget.dispatchEvent(new Event('start'));
                const audioTracks = mediaStream.getAudioTracks();
                // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.
                const channelCount = audioTracks.length === 0 ? 2 : (_a = audioTracks[0].getSettings().channelCount) !== null && _a !== void 0 ? _a : 2;
                promisedAudioNodesAndEncoderId = Promise.all([
                    resume(),
                    promisedAudioWorkletModule.then(()=>createPromisedAudioNodesEncoderIdAndPort(audioBuffer, audioContext, channelCount, mediaStream, mimeType))
                ]).then(async ([, { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode }])=>{
                    mediaStreamAudioSourceNode.connect(recorderAudioWorkletNode);
                    await new Promise((resolve)=>{
                        audioBufferSourceNode.onended = resolve;
                        audioBufferSourceNode.connect(recorderAudioWorkletNode);
                        audioBufferSourceNode.start(audioContext.currentTime + length / audioContext.sampleRate);
                    });
                    audioBufferSourceNode.disconnect(recorderAudioWorkletNode);
                    // Bug #17: Safari does throttle the processing on hidden tabs if there is no active audio output.
                    const constantSourceNode = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$standardized$2d$audio$2d$context$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["ConstantSourceNode"](audioContext, {
                        offset: 0
                    });
                    constantSourceNode.onended = ()=>constantSourceNode.disconnect();
                    constantSourceNode.connect(audioContext.destination);
                    constantSourceNode.start();
                    await recorderAudioWorkletNode.record(port);
                    if (timeslice !== undefined) {
                        promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);
                    }
                    return {
                        constantSourceNode,
                        encoderId,
                        mediaStreamAudioSourceNode,
                        recorderAudioWorkletNode
                    };
                });
                const tracks = mediaStream.getTracks();
                abortRecording = ()=>{
                    stop();
                    eventTarget.dispatchEvent(new ErrorEvent('error', {
                        error: createInvalidModificationError()
                    }));
                };
                mediaStream.addEventListener('addtrack', abortRecording);
                mediaStream.addEventListener('removetrack', abortRecording);
                intervalId = setInterval(()=>{
                    const currentTracks = mediaStream.getTracks();
                    if ((currentTracks.length !== tracks.length || currentTracks.some((track, index)=>track !== tracks[index])) && abortRecording !== null) {
                        abortRecording();
                    }
                }, 1000);
            },
            stop
        };
    };
}; //# sourceMappingURL=web-audio-media-recorder.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/webm-pcm-media-recorder.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createWebmPcmMediaRecorderFactory": (()=>createWebmPcmMediaRecorderFactory)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$media$2d$encoder$2d$host$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/media-encoder-host/build/es2019/module.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multi$2d$buffer$2d$data$2d$view$2f$build$2f$es5$2f$bundle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/multi-buffer-data-view/build/es5/bundle.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$subscribable$2d$things$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/subscribable-things/build/es2019/module.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$subscribable$2d$things$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/subscribable-things/build/es2019/module.js [app-client] (ecmascript) <locals>");
;
;
;
const createWebmPcmMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createNotSupportedError, decodeWebMChunk, readVariableSizeInteger)=>{
    return (eventTarget, nativeMediaRecorderConstructor, mediaStream, mimeType)=>{
        const audioTracks = mediaStream.getAudioTracks();
        const bufferedArrayBuffers = [];
        // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.
        const channelCount = audioTracks.length === 0 ? undefined : audioTracks[0].getSettings().channelCount;
        const nativeMediaRecorder = new nativeMediaRecorderConstructor(mediaStream, {
            mimeType: 'audio/webm;codecs=pcm'
        });
        const sampleRate = audioTracks.length === 0 ? undefined : audioTracks[0].getSettings().sampleRate;
        let promisedPartialRecording = null;
        let stopRecording = ()=>{}; // tslint:disable-line:no-empty
        const dispatchDataAvailableEvent = (arrayBuffers)=>{
            eventTarget.dispatchEvent(createBlobEvent('dataavailable', {
                data: new Blob(arrayBuffers, {
                    type: mimeType
                })
            }));
        };
        const requestNextPartialRecording = async (encoderId, timeslice)=>{
            const arrayBuffers = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$media$2d$encoder$2d$host$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encode"])(encoderId, timeslice);
            if (nativeMediaRecorder.state === 'inactive') {
                bufferedArrayBuffers.push(...arrayBuffers);
            } else {
                dispatchDataAvailableEvent(arrayBuffers);
                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);
            }
        };
        const stop = ()=>{
            if (nativeMediaRecorder.state === 'inactive') {
                return;
            }
            if (promisedPartialRecording !== null) {
                promisedPartialRecording.catch(()=>{
                /* @todo Only catch the errors caused by a duplicate call to encode. */ });
                promisedPartialRecording = null;
            }
            stopRecording();
            stopRecording = ()=>{}; // tslint:disable-line:no-empty
            nativeMediaRecorder.stop();
        };
        nativeMediaRecorder.addEventListener('error', ()=>{
            stop();
            // Bug #3 & #4: Chrome throws an error event without any error.
            eventTarget.dispatchEvent(new ErrorEvent('error', {
                error: createInvalidModificationError()
            }));
        });
        nativeMediaRecorder.addEventListener('start', ()=>eventTarget.dispatchEvent(new Event('start')));
        return {
            get mimeType () {
                return mimeType;
            },
            get state () {
                return nativeMediaRecorder.state;
            },
            pause () {
                return nativeMediaRecorder.pause();
            },
            resume () {
                return nativeMediaRecorder.resume();
            },
            start (timeslice) {
                /*
                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio
                 * codec.
                 */ if (mediaStream.getVideoTracks().length > 0) {
                    throw createNotSupportedError();
                }
                if (nativeMediaRecorder.state === 'inactive') {
                    if (sampleRate === undefined) {
                        throw new Error('The sampleRate is not defined.');
                    }
                    let isRecording = false;
                    let isStopped = false;
                    // Bug #9: Chrome sometimes fires more than one dataavailable event while being inactive.
                    let pendingInvocations = 0;
                    let promisedDataViewElementTypeEncoderIdAndPort = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$media$2d$encoder$2d$host$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["instantiate"])(mimeType, sampleRate);
                    stopRecording = ()=>{
                        isStopped = true;
                    };
                    const removeEventListener = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$subscribable$2d$things$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["on"])(nativeMediaRecorder, 'dataavailable')(({ data })=>{
                        pendingInvocations += 1;
                        promisedDataViewElementTypeEncoderIdAndPort = promisedDataViewElementTypeEncoderIdAndPort.then(async ({ dataView = null, elementType = null, encoderId, port })=>{
                            const arrayBuffer = await data.arrayBuffer();
                            pendingInvocations -= 1;
                            const currentDataView = dataView === null ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multi$2d$buffer$2d$data$2d$view$2f$build$2f$es5$2f$bundle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MultiBufferDataView"]([
                                arrayBuffer
                            ]) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multi$2d$buffer$2d$data$2d$view$2f$build$2f$es5$2f$bundle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MultiBufferDataView"]([
                                ...dataView.buffers,
                                arrayBuffer
                            ], dataView.byteOffset);
                            if (!isRecording && nativeMediaRecorder.state === 'recording' && !isStopped) {
                                const lengthAndValue = readVariableSizeInteger(currentDataView, 0);
                                if (lengthAndValue === null) {
                                    return {
                                        dataView: currentDataView,
                                        elementType,
                                        encoderId,
                                        port
                                    };
                                }
                                const { value } = lengthAndValue;
                                if (value !== 172351395) {
                                    return {
                                        dataView,
                                        elementType,
                                        encoderId,
                                        port
                                    };
                                }
                                isRecording = true;
                            }
                            const { currentElementType, offset, contents } = decodeWebMChunk(currentDataView, elementType, channelCount);
                            const remainingDataView = offset < currentDataView.byteLength ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multi$2d$buffer$2d$data$2d$view$2f$build$2f$es5$2f$bundle$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MultiBufferDataView"](currentDataView.buffers, currentDataView.byteOffset + offset) : null;
                            contents.forEach((content)=>port.postMessage(content, content.map(({ buffer })=>buffer)));
                            if (pendingInvocations === 0 && (nativeMediaRecorder.state === 'inactive' || isStopped)) {
                                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$media$2d$encoder$2d$host$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encode"])(encoderId, null).then((arrayBuffers)=>{
                                    dispatchDataAvailableEvent([
                                        ...bufferedArrayBuffers,
                                        ...arrayBuffers
                                    ]);
                                    bufferedArrayBuffers.length = 0;
                                    eventTarget.dispatchEvent(new Event('stop'));
                                });
                                port.postMessage([]);
                                port.close();
                                removeEventListener();
                            }
                            return {
                                dataView: remainingDataView,
                                elementType: currentElementType,
                                encoderId,
                                port
                            };
                        });
                    });
                    if (timeslice !== undefined) {
                        promisedDataViewElementTypeEncoderIdAndPort.then(({ encoderId })=>promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice));
                    }
                }
                nativeMediaRecorder.start(100);
            },
            stop
        };
    };
}; //# sourceMappingURL=webm-pcm-media-recorder.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/factories/window.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createWindow": (()=>createWindow)
});
const createWindow = ()=>typeof window === 'undefined' ? null : window; //# sourceMappingURL=window.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/functions/read-variable-size-integer-length.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "readVariableSizeIntegerLength": (()=>readVariableSizeIntegerLength)
});
const readVariableSizeIntegerLength = (dataView, offset)=>{
    if (offset >= dataView.byteLength) {
        return null;
    }
    const byte = dataView.getUint8(offset);
    if (byte > 127) {
        return 1;
    }
    if (byte > 63) {
        return 2;
    }
    if (byte > 31) {
        return 3;
    }
    if (byte > 15) {
        return 4;
    }
    if (byte > 7) {
        return 5;
    }
    if (byte > 3) {
        return 6;
    }
    if (byte > 1) {
        return 7;
    }
    if (byte > 0) {
        return 8;
    }
    const length = readVariableSizeIntegerLength(dataView, offset + 1);
    return length === null ? null : length + 8;
}; //# sourceMappingURL=read-variable-size-integer-length.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/functions/wrap-event-listener.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "wrapEventListener": (()=>wrapEventListener)
});
const wrapEventListener = (target, eventListener)=>{
    return (event)=>{
        const descriptor = {
            value: target
        };
        Object.defineProperties(event, {
            currentTarget: descriptor,
            target: descriptor
        });
        if (typeof eventListener === 'function') {
            return eventListener.call(target, event);
        }
        return eventListener.handleEvent.call(target, event);
    };
}; //# sourceMappingURL=wrap-event-listener.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/audio-nodes-and-encoder-id.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=audio-nodes-and-encoder-id.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/blob-event.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=blob-event.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/blob-event-init.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=blob-event-init.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/event-target.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=event-target.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=media-recorder.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-constructor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=media-recorder-constructor.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-event-map.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=media-recorder-event-map.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-options.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=media-recorder-options.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$audio$2d$nodes$2d$and$2d$encoder$2d$id$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/audio-nodes-and-encoder-id.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$blob$2d$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/blob-event.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$blob$2d$event$2d$init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/blob-event-init.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$event$2d$target$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/event-target.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$media$2d$recorder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$media$2d$recorder$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$media$2d$recorder$2d$event$2d$map$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-event-map.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$media$2d$recorder$2d$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-options.js [app-client] (ecmascript)"); //# sourceMappingURL=index.js.map
;
;
;
;
;
;
;
;
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$audio$2d$nodes$2d$and$2d$encoder$2d$id$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/audio-nodes-and-encoder-id.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$blob$2d$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/blob-event.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$blob$2d$event$2d$init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/blob-event-init.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$event$2d$target$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/event-target.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$media$2d$recorder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$media$2d$recorder$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$media$2d$recorder$2d$event$2d$map$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-event-map.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$media$2d$recorder$2d$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-constructor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=blob-event-constructor.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-handler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=blob-event-handler.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=blob-event-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-factory-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=blob-event-factory-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/decode-web-m-chunk-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=decode-web-m-chunk-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/decode-web-m-chunk-function.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=decode-web-m-chunk-function.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/element-type.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=element-type.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/error-event-handler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=error-event-handler.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/event-handler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=event-handler.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-constructor.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=event-target-constructor.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-constructor-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=event-target-constructor-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=event-target-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-factory-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=event-target-factory-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/invalid-modification-error-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=invalid-modification-error-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/invalid-state-error-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=invalid-state-error-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/is-supported-promise-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=is-supported-promise-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/media-recorder-constructor-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=media-recorder-constructor-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/native-blob-event-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=native-blob-event-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/native-event-target.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=native-event-target.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-constructor-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=native-media-recorder-constructor-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=native-media-recorder-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-factory-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=native-media-recorder-factory-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/not-supported-error-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=not-supported-error-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/promised-data-view-element-type-encoder-id-and-port.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=promised-data-view-element-type-encoder-id-and-port.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-content-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=read-element-content-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-content-function.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=read-element-content-function.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-type-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=read-element-type-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-type-function.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=read-element-type-function.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=read-variable-size-integer-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-function.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=read-variable-size-integer-function.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-length-function.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=read-variable-size-integer-length-function.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/recording-state.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=recording-state.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/web-audio-media-recorder-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=web-audio-media-recorder-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/web-audio-media-recorder-factory-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=web-audio-media-recorder-factory-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/webm-pcm-media-recorder-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=webm-pcm-media-recorder-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/webm-pcm-media-recorder-factory-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=webm-pcm-media-recorder-factory-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/window.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=window.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/window-factory.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=window-factory.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/wrap-event-listener-function.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
;
 //# sourceMappingURL=wrap-event-listener-function.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$blob$2d$event$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$blob$2d$event$2d$handler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-handler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$blob$2d$event$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$blob$2d$event$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$decode$2d$web$2d$m$2d$chunk$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/decode-web-m-chunk-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$decode$2d$web$2d$m$2d$chunk$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/decode-web-m-chunk-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$element$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/element-type.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$error$2d$event$2d$handler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/error-event-handler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$handler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-handler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$target$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$target$2d$constructor$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-constructor-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$target$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$target$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$invalid$2d$modification$2d$error$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/invalid-modification-error-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$invalid$2d$state$2d$error$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/invalid-state-error-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$is$2d$supported$2d$promise$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/is-supported-promise-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$media$2d$recorder$2d$constructor$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/media-recorder-constructor-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$blob$2d$event$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-blob-event-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$event$2d$target$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-event-target.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$media$2d$recorder$2d$constructor$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-constructor-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$media$2d$recorder$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$media$2d$recorder$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$not$2d$supported$2d$error$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/not-supported-error-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$promised$2d$data$2d$view$2d$element$2d$type$2d$encoder$2d$id$2d$and$2d$port$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/promised-data-view-element-type-encoder-id-and-port.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$element$2d$content$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-content-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$element$2d$content$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-content-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$element$2d$type$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-type-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$element$2d$type$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-type-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$variable$2d$size$2d$integer$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$variable$2d$size$2d$integer$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$variable$2d$size$2d$integer$2d$length$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-length-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$recording$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/recording-state.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$web$2d$audio$2d$media$2d$recorder$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/web-audio-media-recorder-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$web$2d$audio$2d$media$2d$recorder$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/web-audio-media-recorder-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$webm$2d$pcm$2d$media$2d$recorder$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/webm-pcm-media-recorder-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$webm$2d$pcm$2d$media$2d$recorder$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/webm-pcm-media-recorder-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$window$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/window.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$window$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/window-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$wrap$2d$event$2d$listener$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/wrap-event-listener-function.js [app-client] (ecmascript)"); //# sourceMappingURL=index.js.map
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$blob$2d$event$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$blob$2d$event$2d$handler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-handler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$blob$2d$event$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$blob$2d$event$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$decode$2d$web$2d$m$2d$chunk$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/decode-web-m-chunk-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$decode$2d$web$2d$m$2d$chunk$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/decode-web-m-chunk-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$element$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/element-type.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$error$2d$event$2d$handler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/error-event-handler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$handler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-handler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$target$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$target$2d$constructor$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-constructor-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$target$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$target$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$invalid$2d$modification$2d$error$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/invalid-modification-error-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$invalid$2d$state$2d$error$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/invalid-state-error-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$is$2d$supported$2d$promise$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/is-supported-promise-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$media$2d$recorder$2d$constructor$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/media-recorder-constructor-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$blob$2d$event$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-blob-event-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$event$2d$target$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-event-target.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$media$2d$recorder$2d$constructor$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-constructor-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$media$2d$recorder$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$media$2d$recorder$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$not$2d$supported$2d$error$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/not-supported-error-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$promised$2d$data$2d$view$2d$element$2d$type$2d$encoder$2d$id$2d$and$2d$port$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/promised-data-view-element-type-encoder-id-and-port.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$element$2d$content$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-content-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$element$2d$content$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-content-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$element$2d$type$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-type-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$element$2d$type$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-type-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$variable$2d$size$2d$integer$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$variable$2d$size$2d$integer$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$variable$2d$size$2d$integer$2d$length$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-length-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$recording$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/recording-state.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$web$2d$audio$2d$media$2d$recorder$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/web-audio-media-recorder-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$web$2d$audio$2d$media$2d$recorder$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/web-audio-media-recorder-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$webm$2d$pcm$2d$media$2d$recorder$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/webm-pcm-media-recorder-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$webm$2d$pcm$2d$media$2d$recorder$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/webm-pcm-media-recorder-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$window$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/window.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$window$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/window-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$wrap$2d$event$2d$listener$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/wrap-event-listener-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/module.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MediaRecorder": (()=>mediaRecorderConstructor),
    "isSupported": (()=>isSupported),
    "register": (()=>register)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$media$2d$encoder$2d$host$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/media-encoder-host/build/es2019/module.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$blob$2d$event$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/blob-event-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$decode$2d$web$2d$m$2d$chunk$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/decode-web-m-chunk.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$event$2d$target$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/event-target-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$event$2d$target$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/event-target-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$invalid$2d$modification$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/invalid-modification-error.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$invalid$2d$state$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/invalid-state-error.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$is$2d$supported$2d$promise$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/is-supported-promise.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$media$2d$recorder$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/media-recorder-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$native$2d$blob$2d$event$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/native-blob-event-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$native$2d$media$2d$recorder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$native$2d$media$2d$recorder$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$not$2d$supported$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/not-supported-error.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$read$2d$element$2d$content$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/read-element-content.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$read$2d$element$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/read-element-type.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$read$2d$variable$2d$size$2d$integer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/read-variable-size-integer.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$web$2d$audio$2d$media$2d$recorder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/web-audio-media-recorder.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$webm$2d$pcm$2d$media$2d$recorder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/webm-pcm-media-recorder.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$window$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/window.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$functions$2f$read$2d$variable$2d$size$2d$integer$2d$length$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/functions/read-variable-size-integer-length.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$functions$2f$wrap$2d$event$2d$listener$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/functions/wrap-event-listener.js [app-client] (ecmascript)");
/*
 * @todo Explicitly referencing the barrel file seems to be necessary when enabling the
 * isolatedModules compiler option.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/index.js [app-client] (ecmascript) <module evaluation>");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const encoderRegexes = [];
const window = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$window$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createWindow"])();
const nativeBlobEventConstructor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$native$2d$blob$2d$event$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createNativeBlobEventConstructor"])(window);
const createBlobEvent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$blob$2d$event$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createBlobEventFactory"])(nativeBlobEventConstructor);
const createWebAudioMediaRecorder = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$web$2d$audio$2d$media$2d$recorder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createWebAudioMediaRecorderFactory"])(createBlobEvent, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$invalid$2d$modification$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createInvalidModificationError"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$invalid$2d$state$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createInvalidStateError"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$not$2d$supported$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createNotSupportedError"]);
const readVariableSizeInteger = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$read$2d$variable$2d$size$2d$integer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createReadVariableSizeInteger"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$functions$2f$read$2d$variable$2d$size$2d$integer$2d$length$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["readVariableSizeIntegerLength"]);
const readElementContent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$read$2d$element$2d$content$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createReadElementContent"])(readVariableSizeInteger);
const readElementType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$read$2d$element$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createReadElementType"])(readVariableSizeInteger);
const decodeWebMChunk = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$decode$2d$web$2d$m$2d$chunk$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createDecodeWebMChunk"])(readElementContent, readElementType);
const createWebmPcmMediaRecorder = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$webm$2d$pcm$2d$media$2d$recorder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createWebmPcmMediaRecorderFactory"])(createBlobEvent, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$invalid$2d$modification$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createInvalidModificationError"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$not$2d$supported$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createNotSupportedError"], decodeWebMChunk, readVariableSizeInteger);
const createEventTarget = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$event$2d$target$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createEventTargetFactory"])(window);
const nativeMediaRecorderConstructor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$native$2d$media$2d$recorder$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createNativeMediaRecorderConstructor"])(window);
const createNativeMediaRecorder = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$native$2d$media$2d$recorder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createNativeMediaRecorderFactory"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$invalid$2d$modification$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createInvalidModificationError"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$not$2d$supported$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createNotSupportedError"]);
const mediaRecorderConstructor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$media$2d$recorder$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createMediaRecorderConstructor"])(createNativeMediaRecorder, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$not$2d$supported$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createNotSupportedError"], createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$event$2d$target$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createEventTargetConstructor"])(createEventTarget, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$functions$2f$wrap$2d$event$2d$listener$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["wrapEventListener"]), nativeMediaRecorderConstructor);
;
const isSupported = ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$is$2d$supported$2d$promise$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createIsSupportedPromise"])(window);
const register = async (port)=>{
    encoderRegexes.push(await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$media$2d$encoder$2d$host$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["register"])(port));
}; //# sourceMappingURL=module.js.map
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/module.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$media$2d$encoder$2d$host$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/media-encoder-host/build/es2019/module.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$blob$2d$event$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/blob-event-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$decode$2d$web$2d$m$2d$chunk$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/decode-web-m-chunk.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$event$2d$target$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/event-target-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$event$2d$target$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/event-target-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$invalid$2d$modification$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/invalid-modification-error.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$invalid$2d$state$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/invalid-state-error.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$is$2d$supported$2d$promise$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/is-supported-promise.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$media$2d$recorder$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/media-recorder-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$native$2d$blob$2d$event$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/native-blob-event-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$native$2d$media$2d$recorder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$native$2d$media$2d$recorder$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$not$2d$supported$2d$error$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/not-supported-error.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$read$2d$element$2d$content$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/read-element-content.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$read$2d$element$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/read-element-type.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$read$2d$variable$2d$size$2d$integer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/read-variable-size-integer.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$web$2d$audio$2d$media$2d$recorder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/web-audio-media-recorder.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$webm$2d$pcm$2d$media$2d$recorder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/webm-pcm-media-recorder.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$factories$2f$window$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/factories/window.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$functions$2f$read$2d$variable$2d$size$2d$integer$2d$length$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/functions/read-variable-size-integer-length.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$functions$2f$wrap$2d$event$2d$listener$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/functions/wrap-event-listener.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/module.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/index.js [app-client] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$audio$2d$nodes$2d$and$2d$encoder$2d$id$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/audio-nodes-and-encoder-id.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$blob$2d$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/blob-event.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$blob$2d$event$2d$init$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/blob-event-init.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$event$2d$target$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/event-target.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$media$2d$recorder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$media$2d$recorder$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$media$2d$recorder$2d$event$2d$map$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-event-map.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$media$2d$recorder$2d$options$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/media-recorder-options.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/index.js [app-client] (ecmascript) <exports>");
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/index.js [app-client] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$blob$2d$event$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$blob$2d$event$2d$handler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-handler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$blob$2d$event$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$blob$2d$event$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/blob-event-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$decode$2d$web$2d$m$2d$chunk$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/decode-web-m-chunk-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$decode$2d$web$2d$m$2d$chunk$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/decode-web-m-chunk-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$element$2d$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/element-type.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$error$2d$event$2d$handler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/error-event-handler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$handler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-handler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$target$2d$constructor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-constructor.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$target$2d$constructor$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-constructor-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$target$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$event$2d$target$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/event-target-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$invalid$2d$modification$2d$error$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/invalid-modification-error-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$invalid$2d$state$2d$error$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/invalid-state-error-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$is$2d$supported$2d$promise$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/is-supported-promise-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$media$2d$recorder$2d$constructor$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/media-recorder-constructor-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$blob$2d$event$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-blob-event-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$event$2d$target$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-event-target.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$media$2d$recorder$2d$constructor$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-constructor-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$media$2d$recorder$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$native$2d$media$2d$recorder$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/native-media-recorder-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$not$2d$supported$2d$error$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/not-supported-error-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$promised$2d$data$2d$view$2d$element$2d$type$2d$encoder$2d$id$2d$and$2d$port$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/promised-data-view-element-type-encoder-id-and-port.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$element$2d$content$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-content-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$element$2d$content$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-content-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$element$2d$type$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-type-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$element$2d$type$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-element-type-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$variable$2d$size$2d$integer$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$variable$2d$size$2d$integer$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$read$2d$variable$2d$size$2d$integer$2d$length$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/read-variable-size-integer-length-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$recording$2d$state$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/recording-state.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$web$2d$audio$2d$media$2d$recorder$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/web-audio-media-recorder-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$web$2d$audio$2d$media$2d$recorder$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/web-audio-media-recorder-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$webm$2d$pcm$2d$media$2d$recorder$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/webm-pcm-media-recorder-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$webm$2d$pcm$2d$media$2d$recorder$2d$factory$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/webm-pcm-media-recorder-factory-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$window$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/window.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$window$2d$factory$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/window-factory.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$wrap$2d$event$2d$listener$2d$function$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/wrap-event-listener-function.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/types/index.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/index.js [app-client] (ecmascript) <exports>");
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/module.js [app-client] (ecmascript) <exports>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MediaRecorder": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["MediaRecorder"]),
    "isSupported": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["isSupported"]),
    "register": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["register"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$interfaces$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/interfaces/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$types$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/types/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/module.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/extendable-media-recorder/build/es2019/module.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "MediaRecorder": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__["MediaRecorder"]),
    "isSupported": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__["isSupported"]),
    "register": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__["register"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/module.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$extendable$2d$media$2d$recorder$2f$build$2f$es2019$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$exports$3e$__ = __turbopack_context__.i("[project]/node_modules/extendable-media-recorder/build/es2019/module.js [app-client] (ecmascript) <exports>");
}}),
}]);

//# sourceMappingURL=node_modules_extendable-media-recorder_build_es2019_9f565efc._.js.map