{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40google-cloud/speech/build/src/helpers.js"],"sourcesContent":["\"use strict\";\n/*\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImprovedStreamingClient = void 0;\nconst common = require(\"@google-cloud/common\");\nconst pumpify = require(\"pumpify\");\nconst streamEvents = require(\"stream-events\");\nconst stream_1 = require(\"stream\");\nclass ImprovedStreamingClient {\n    /**\n     * Performs bidirectional streaming speech recognition: receive results while\n     * sending audio. This method is only available via the gRPC API (not REST).\n     *\n     * @param {object} config The configuration for the stream. This is\n     *     appropriately wrapped and sent as the first argument. It should be an\n     *     object conforming to the [StreamingRecognitionConfig]{@link StreamingRecognitionConfig}\n     *     structure.\n     * @param {object} [options] Optional parameters. You can override the default\n     *     settings for this call, e.g, timeout, retries, paginations, etc. See\n     *     [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/global.html#CallOptions}\n     *     for the details.\n     * @returns {stream} An object stream which is both readable and writable. It\n     *     accepts raw audio for the `write()` method, and will emit objects\n     *     representing [StreamingRecognizeResponse]{@link StreamingRecognizeResponse}\n     *     on the 'data' event asynchronously.\n     *\n     * @example\n     * const speech = require('@google-cloud/speech');\n     * const client = new speech.SpeechClient();\n     *\n     * const stream = client.streamingRecognize({\n     *   config: {\n     *     encoding: 'LINEAR16',\n     *     languageCode: 'en-us',\n     *     sampleRateHertz: 44100,\n     *   },\n     * }).on('data', function(response) {\n     *   // doThingsWith(response);\n     * });\n     * const request = {};\n     * // Write request objects.\n     * stream.write(request);\n     */\n    streamingRecognize(streamingConfig, options) {\n        options = options || {};\n        streamingConfig = streamingConfig || {};\n        // Format the audio content as input request for pipeline\n        const recognizeStream = streamEvents(new pumpify.obj());\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const requestStream = this\n            ._streamingRecognize(options)\n            .on('error', (err) => {\n            recognizeStream.destroy(err);\n        })\n            .on('response', (response) => {\n            recognizeStream.emit('response', response);\n        });\n        // Attach the events to the request stream, but only do so\n        // when the first write (of data) comes in.\n        //\n        // This also means that the sending of the initial request (with the\n        // config) is delayed until we get the first burst of data.\n        recognizeStream.once('writing', () => {\n            // The first message should contain the streaming config.\n            requestStream.write({ streamingConfig });\n            // Set up appropriate piping between the stream returned by\n            // the underlying API method and the one that we return.\n            recognizeStream.setPipeline([\n                // Format the user's input.\n                // This entails that the user sends raw audio; it is wrapped in\n                // the appropriate request structure.\n                new stream_1.PassThrough({\n                    objectMode: true,\n                    transform: (audioContent, _, next) => {\n                        if (audioContent !== undefined) {\n                            next(undefined, { audioContent });\n                            return;\n                        }\n                        next();\n                    },\n                }),\n                requestStream,\n                new stream_1.PassThrough({\n                    objectMode: true,\n                    transform: (response, enc, next) => {\n                        if (response.error) {\n                            next(new common.util.ApiError(response.error));\n                            return;\n                        }\n                        next(undefined, response);\n                    },\n                }),\n            ]);\n        });\n        return recognizeStream;\n    }\n}\nexports.ImprovedStreamingClient = ImprovedStreamingClient;\n//# sourceMappingURL=helpers.js.map"],"names":[],"mappings":"AAAA;AACA;;;;;;;;;;;;;;CAcC,GACD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,uBAAuB,GAAG,KAAK;AACvC,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;IACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAiCC,GACD,mBAAmB,eAAe,EAAE,OAAO,EAAE;QACzC,UAAU,WAAW,CAAC;QACtB,kBAAkB,mBAAmB,CAAC;QACtC,yDAAyD;QACzD,MAAM,kBAAkB,aAAa,IAAI,QAAQ,GAAG;QACpD,8DAA8D;QAC9D,MAAM,gBAAgB,IAAI,CACrB,mBAAmB,CAAC,SACpB,EAAE,CAAC,SAAS,CAAC;YACd,gBAAgB,OAAO,CAAC;QAC5B,GACK,EAAE,CAAC,YAAY,CAAC;YACjB,gBAAgB,IAAI,CAAC,YAAY;QACrC;QACA,0DAA0D;QAC1D,2CAA2C;QAC3C,EAAE;QACF,oEAAoE;QACpE,2DAA2D;QAC3D,gBAAgB,IAAI,CAAC,WAAW;YAC5B,yDAAyD;YACzD,cAAc,KAAK,CAAC;gBAAE;YAAgB;YACtC,2DAA2D;YAC3D,wDAAwD;YACxD,gBAAgB,WAAW,CAAC;gBACxB,2BAA2B;gBAC3B,+DAA+D;gBAC/D,qCAAqC;gBACrC,IAAI,SAAS,WAAW,CAAC;oBACrB,YAAY;oBACZ,WAAW,CAAC,cAAc,GAAG;wBACzB,IAAI,iBAAiB,WAAW;4BAC5B,KAAK,WAAW;gCAAE;4BAAa;4BAC/B;wBACJ;wBACA;oBACJ;gBACJ;gBACA;gBACA,IAAI,SAAS,WAAW,CAAC;oBACrB,YAAY;oBACZ,WAAW,CAAC,UAAU,KAAK;wBACvB,IAAI,SAAS,KAAK,EAAE;4BAChB,KAAK,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,KAAK;4BAC5C;wBACJ;wBACA,KAAK,WAAW;oBACpB;gBACJ;aACH;QACL;QACA,OAAO;IACX;AACJ;AACA,QAAQ,uBAAuB,GAAG,yBAClC,mCAAmC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40google-cloud/speech/build/src/v1p1beta1/adaptation_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2025 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdaptationClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1p1beta1/adaptation_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./adaptation_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service that implements Google Cloud Speech Adaptation API.\n * @class\n * @memberof v1p1beta1\n */\nclass AdaptationClient {\n    /**\n     * Construct an instance of AdaptationClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new AdaptationClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'speech.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            customClassPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/customClasses/{custom_class}'),\n            locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n            phraseSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/phraseSets/{phrase_set}'),\n            projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}'),\n        };\n        // Some of the methods on this service return \"paged\" results,\n        // (e.g. 50 results at a time, with tokens to get subsequent\n        // pages). Denote the keys used for pagination and results.\n        this.descriptors.page = {\n            listPhraseSet: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'phraseSets'),\n            listCustomClasses: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'customClasses'),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.speech.v1p1beta1.Adaptation', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.adaptationStub) {\n            return this.adaptationStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.speech.v1p1beta1.Adaptation.\n        this.adaptationStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.speech.v1p1beta1.Adaptation')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.speech.v1p1beta1.Adaptation, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const adaptationStubMethods = [\n            'createPhraseSet',\n            'getPhraseSet',\n            'listPhraseSet',\n            'updatePhraseSet',\n            'deletePhraseSet',\n            'createCustomClass',\n            'getCustomClass',\n            'listCustomClasses',\n            'updateCustomClass',\n            'deleteCustomClass',\n        ];\n        for (const methodName of adaptationStubMethods) {\n            const callPromise = this.adaptationStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.page[methodName] || undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.adaptationStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return ['https://www.googleapis.com/auth/cloud-platform'];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    createPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createPhraseSet(request, options, callback);\n    }\n    getPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getPhraseSet(request, options, callback);\n    }\n    updatePhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'phrase_set.name': (_a = request.phraseSet.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updatePhraseSet(request, options, callback);\n    }\n    deletePhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deletePhraseSet(request, options, callback);\n    }\n    createCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createCustomClass(request, options, callback);\n    }\n    getCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getCustomClass(request, options, callback);\n    }\n    updateCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'custom_class.name': (_a = request.customClass.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateCustomClass(request, options, callback);\n    }\n    deleteCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteCustomClass(request, options, callback);\n    }\n    listPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listPhraseSet(request, options, callback);\n    }\n    /**\n     * Equivalent to `listPhraseSet`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent, which owns this collection of phrase set. Format:\n     *\n     *   `projects/{project}/locations/{location}`\n     *\n     *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n     *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n     *   endpoint, use the `global` location. To specify a region, use a\n     *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n     *   with matching `us` or `eu` location value.\n     * @param {number} request.pageSize\n     *   The maximum number of phrase sets to return. The service may return\n     *   fewer than this value. If unspecified, at most 50 phrase sets will be\n     *   returned. The maximum value is 1000; values above 1000 will be coerced to\n     *   1000.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListPhraseSet` call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to `ListPhraseSet` must\n     *   match the call that provided the page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.speech.v1p1beta1.PhraseSet|PhraseSet} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listPhraseSetAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listPhraseSetStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listPhraseSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listPhraseSet.createStream(this.innerApiCalls.listPhraseSet, request, callSettings);\n    }\n    /**\n     * Equivalent to `listPhraseSet`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent, which owns this collection of phrase set. Format:\n     *\n     *   `projects/{project}/locations/{location}`\n     *\n     *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n     *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n     *   endpoint, use the `global` location. To specify a region, use a\n     *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n     *   with matching `us` or `eu` location value.\n     * @param {number} request.pageSize\n     *   The maximum number of phrase sets to return. The service may return\n     *   fewer than this value. If unspecified, at most 50 phrase sets will be\n     *   returned. The maximum value is 1000; values above 1000 will be coerced to\n     *   1000.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListPhraseSet` call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to `ListPhraseSet` must\n     *   match the call that provided the page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.speech.v1p1beta1.PhraseSet|PhraseSet}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p1beta1/adaptation.list_phrase_set.js</caption>\n     * region_tag:speech_v1p1beta1_generated_Adaptation_ListPhraseSet_async\n     */\n    listPhraseSetAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listPhraseSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listPhraseSet.asyncIterate(this.innerApiCalls['listPhraseSet'], request, callSettings);\n    }\n    listCustomClasses(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listCustomClasses(request, options, callback);\n    }\n    /**\n     * Equivalent to `listCustomClasses`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent, which owns this collection of custom classes. Format:\n     *\n     *   `projects/{project}/locations/{location}/customClasses`\n     *\n     *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n     *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n     *   endpoint, use the `global` location. To specify a region, use a\n     *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n     *   with matching `us` or `eu` location value.\n     * @param {number} request.pageSize\n     *   The maximum number of custom classes to return. The service may return\n     *   fewer than this value. If unspecified, at most 50 custom classes will be\n     *   returned. The maximum value is 1000; values above 1000 will be coerced to\n     *   1000.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListCustomClass` call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to `ListCustomClass` must\n     *   match the call that provided the page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.speech.v1p1beta1.CustomClass|CustomClass} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listCustomClassesAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listCustomClassesStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listCustomClasses'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listCustomClasses.createStream(this.innerApiCalls.listCustomClasses, request, callSettings);\n    }\n    /**\n     * Equivalent to `listCustomClasses`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent, which owns this collection of custom classes. Format:\n     *\n     *   `projects/{project}/locations/{location}/customClasses`\n     *\n     *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n     *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n     *   endpoint, use the `global` location. To specify a region, use a\n     *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n     *   with matching `us` or `eu` location value.\n     * @param {number} request.pageSize\n     *   The maximum number of custom classes to return. The service may return\n     *   fewer than this value. If unspecified, at most 50 custom classes will be\n     *   returned. The maximum value is 1000; values above 1000 will be coerced to\n     *   1000.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListCustomClass` call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to `ListCustomClass` must\n     *   match the call that provided the page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.speech.v1p1beta1.CustomClass|CustomClass}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p1beta1/adaptation.list_custom_classes.js</caption>\n     * region_tag:speech_v1p1beta1_generated_Adaptation_ListCustomClasses_async\n     */\n    listCustomClassesAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listCustomClasses'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listCustomClasses.asyncIterate(this.innerApiCalls['listCustomClasses'], request, callSettings);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified customClass resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} custom_class\n     * @returns {string} Resource name string.\n     */\n    customClassPath(project, location, customClass) {\n        return this.pathTemplates.customClassPathTemplate.render({\n            project: project,\n            location: location,\n            custom_class: customClass,\n        });\n    }\n    /**\n     * Parse the project from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .project;\n    }\n    /**\n     * Parse the location from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .location;\n    }\n    /**\n     * Parse the custom_class from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the custom_class.\n     */\n    matchCustomClassFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .custom_class;\n    }\n    /**\n     * Return a fully-qualified location resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    locationPath(project, location) {\n        return this.pathTemplates.locationPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).project;\n    }\n    /**\n     * Parse the location from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).location;\n    }\n    /**\n     * Return a fully-qualified phraseSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} phrase_set\n     * @returns {string} Resource name string.\n     */\n    phraseSetPath(project, location, phraseSet) {\n        return this.pathTemplates.phraseSetPathTemplate.render({\n            project: project,\n            location: location,\n            phrase_set: phraseSet,\n        });\n    }\n    /**\n     * Parse the project from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .project;\n    }\n    /**\n     * Parse the location from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .location;\n    }\n    /**\n     * Parse the phrase_set from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the phrase_set.\n     */\n    matchPhraseSetFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .phrase_set;\n    }\n    /**\n     * Return a fully-qualified project resource name string.\n     *\n     * @param {string} project\n     * @returns {string} Resource name string.\n     */\n    projectPath(project) {\n        return this.pathTemplates.projectPathTemplate.render({\n            project: project,\n        });\n    }\n    /**\n     * Parse the project from Project resource.\n     *\n     * @param {string} projectName\n     *   A fully-qualified path representing Project resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProjectName(projectName) {\n        return this.pathTemplates.projectPathTemplate.match(projectName).project;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.adaptationStub && !this._terminated) {\n            return this.adaptationStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.AdaptationClient = AdaptationClient;\n//# sourceMappingURL=adaptation_client.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 956, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40google-cloud/speech/build/src/v1p1beta1/speech_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2025 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechClient = void 0;\nconst stream_1 = require(\"stream\");\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1p1beta1/speech_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./speech_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service that implements Google Cloud Speech API.\n * @class\n * @memberof v1p1beta1\n */\nclass SpeechClient {\n    /**\n     * Construct an instance of SpeechClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new SpeechClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'speech.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            customClassPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/customClasses/{custom_class}'),\n            phraseSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/phraseSets/{phrase_set}'),\n        };\n        // Some of the methods on this service provide streaming responses.\n        // Provide descriptors for these.\n        this.descriptors.stream = {\n            streamingRecognize: new this._gaxModule.StreamDescriptor(this._gaxModule.StreamType.BIDI_STREAMING, !!opts.fallback, !!opts.gaxServerStreamingRetries),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [\n                {\n                    selector: 'google.longrunning.Operations.GetOperation',\n                    get: '/v1p1beta1/operations/{name=**}',\n                },\n                {\n                    selector: 'google.longrunning.Operations.ListOperations',\n                    get: '/v1p1beta1/operations',\n                },\n            ];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const longRunningRecognizeResponse = protoFilesRoot.lookup('.google.cloud.speech.v1p1beta1.LongRunningRecognizeResponse');\n        const longRunningRecognizeMetadata = protoFilesRoot.lookup('.google.cloud.speech.v1p1beta1.LongRunningRecognizeMetadata');\n        this.descriptors.longrunning = {\n            longRunningRecognize: new this._gaxModule.LongrunningDescriptor(this.operationsClient, longRunningRecognizeResponse.decode.bind(longRunningRecognizeResponse), longRunningRecognizeMetadata.decode.bind(longRunningRecognizeMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.speech.v1p1beta1.Speech', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.speechStub) {\n            return this.speechStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.speech.v1p1beta1.Speech.\n        this.speechStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.speech.v1p1beta1.Speech')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.speech.v1p1beta1.Speech, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const speechStubMethods = [\n            'recognize',\n            'longRunningRecognize',\n            'streamingRecognize',\n        ];\n        for (const methodName of speechStubMethods) {\n            const callPromise = this.speechStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    if (methodName in this.descriptors.stream) {\n                        const stream = new stream_1.PassThrough({ objectMode: true });\n                        setImmediate(() => {\n                            stream.emit('error', new this._gaxModule.GoogleError('The client has already been closed.'));\n                        });\n                        return stream;\n                    }\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.stream[methodName] ||\n                this.descriptors.longrunning[methodName] ||\n                undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.speechStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return ['https://www.googleapis.com/auth/cloud-platform'];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    recognize(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.recognize(request, options, callback);\n    }\n    /**\n     * Performs bidirectional streaming speech recognition: receive results while\n     * sending audio. This method is only available via the gRPC API (not REST).\n     *\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which is both readable and writable. It accepts objects\n     *   representing {@link protos.google.cloud.speech.v1p1beta1.StreamingRecognizeRequest|StreamingRecognizeRequest} for write() method, and\n     *   will emit objects representing {@link protos.google.cloud.speech.v1p1beta1.StreamingRecognizeResponse|StreamingRecognizeResponse} on 'data' event asynchronously.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#bi-directional-streaming | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p1beta1/speech.streaming_recognize.js</caption>\n     * region_tag:speech_v1p1beta1_generated_Speech_StreamingRecognize_async\n     */\n    _streamingRecognize(options) {\n        this.initialize();\n        return this.innerApiCalls.streamingRecognize(null, options);\n    }\n    longRunningRecognize(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.longRunningRecognize(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `longRunningRecognize()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1p1beta1/speech.long_running_recognize.js</caption>\n     * region_tag:speech_v1p1beta1_generated_Speech_LongRunningRecognize_async\n     */\n    async checkLongRunningRecognizeProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.longRunningRecognize, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    /**\n     * Gets the latest state of a long-running operation.  Clients can use this\n     * method to poll the operation result at intervals as recommended by the API\n     * service.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     *   for the details.\n     * @param {function(?Error, ?Object)=} callback\n     *   The function which will be called with the result of the API call.\n     *\n     *   The second parameter to the callback is an object representing\n     *   {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * @return {Promise} - The promise which resolves to an array.\n     *   The first element of the array is an object representing\n     * {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * The promise has a method named \"cancel\" which cancels the ongoing API call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * const name = '';\n     * const [response] = await client.getOperation({name});\n     * // doThingsWith(response)\n     * ```\n     */\n    getOperation(request, optionsOrCallback, callback) {\n        var _a;\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        return this.operationsClient.getOperation(request, options, callback);\n    }\n    /**\n     * Lists operations that match the specified filter in the request. If the\n     * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.\n     *\n     * For-await-of syntax is used with the iterable to recursively get response element on-demand.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation collection.\n     * @param {string} request.filter - The standard list filter.\n     * @param {number=} request.pageSize -\n     *   The maximum number of resources contained in the underlying API\n     *   response. If page streaming is performed per-resource, this\n     *   parameter does not affect the return value. If page streaming is\n     *   performed per-page, this determines the maximum number of\n     *   resources in a page.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     *   details.\n     * @returns {Object}\n     *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * for await (const response of client.listOperationsAsync(request));\n     * // doThingsWith(response)\n     * ```\n     */\n    listOperationsAsync(request, options) {\n        var _a;\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        return this.operationsClient.listOperationsAsync(request, options);\n    }\n    /**\n     * Starts asynchronous cancellation on a long-running operation.  The server\n     * makes a best effort to cancel the operation, but success is not\n     * guaranteed.  If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\n     * {@link Operations.GetOperation} or\n     * other methods to check whether the cancellation succeeded or whether the\n     * operation completed despite cancellation. On successful cancellation,\n     * the operation is not deleted; instead, it becomes an operation with\n     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of\n     * 1, corresponding to `Code.CANCELLED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be cancelled.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     * details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.cancelOperation({name: ''});\n     * ```\n     */\n    cancelOperation(request, optionsOrCallback, callback) {\n        var _a;\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        return this.operationsClient.cancelOperation(request, options, callback);\n    }\n    /**\n     * Deletes a long-running operation. This method indicates that the client is\n     * no longer interested in the operation result. It does not cancel the\n     * operation. If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be deleted.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     * for the details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.deleteOperation({name: ''});\n     * ```\n     */\n    deleteOperation(request, optionsOrCallback, callback) {\n        var _a;\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        return this.operationsClient.deleteOperation(request, options, callback);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified customClass resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} custom_class\n     * @returns {string} Resource name string.\n     */\n    customClassPath(project, location, customClass) {\n        return this.pathTemplates.customClassPathTemplate.render({\n            project: project,\n            location: location,\n            custom_class: customClass,\n        });\n    }\n    /**\n     * Parse the project from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .project;\n    }\n    /**\n     * Parse the location from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .location;\n    }\n    /**\n     * Parse the custom_class from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the custom_class.\n     */\n    matchCustomClassFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .custom_class;\n    }\n    /**\n     * Return a fully-qualified phraseSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} phrase_set\n     * @returns {string} Resource name string.\n     */\n    phraseSetPath(project, location, phraseSet) {\n        return this.pathTemplates.phraseSetPathTemplate.render({\n            project: project,\n            location: location,\n            phrase_set: phraseSet,\n        });\n    }\n    /**\n     * Parse the project from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .project;\n    }\n    /**\n     * Parse the location from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .location;\n    }\n    /**\n     * Parse the phrase_set from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the phrase_set.\n     */\n    matchPhraseSetFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .phrase_set;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.speechStub && !this._terminated) {\n            return this.speechStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.SpeechClient = SpeechClient;\n//# sourceMappingURL=speech_client.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1603, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40google-cloud/speech/build/src/v1p1beta1/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2025 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechClient = exports.AdaptationClient = void 0;\nvar adaptation_client_1 = require(\"./adaptation_client\");\nObject.defineProperty(exports, \"AdaptationClient\", { enumerable: true, get: function () { return adaptation_client_1.AdaptationClient; } });\nvar speech_client_1 = require(\"./speech_client\");\nObject.defineProperty(exports, \"SpeechClient\", { enumerable: true, get: function () { return speech_client_1.SpeechClient; } });\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAC5E,iEAAiE;AACjE,qDAAqD;AACrD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,YAAY,GAAG,QAAQ,gBAAgB,GAAG,KAAK;AACvD,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,oBAAoB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,oBAAoB,gBAAgB;IAAE;AAAE;AACzI,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,gBAAgB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,gBAAgB,YAAY;IAAE;AAAE,IAC7H,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1649, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40google-cloud/speech/build/src/v1/adaptation_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2025 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdaptationClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/adaptation_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./adaptation_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service that implements Google Cloud Speech Adaptation API.\n * @class\n * @memberof v1\n */\nclass AdaptationClient {\n    /**\n     * Construct an instance of AdaptationClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new AdaptationClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'speech.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            customClassPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/customClasses/{custom_class}'),\n            locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n            phraseSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/phraseSets/{phrase_set}'),\n            projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}'),\n        };\n        // Some of the methods on this service return \"paged\" results,\n        // (e.g. 50 results at a time, with tokens to get subsequent\n        // pages). Denote the keys used for pagination and results.\n        this.descriptors.page = {\n            listPhraseSet: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'phraseSets'),\n            listCustomClasses: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'customClasses'),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.speech.v1.Adaptation', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.adaptationStub) {\n            return this.adaptationStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.speech.v1.Adaptation.\n        this.adaptationStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.speech.v1.Adaptation')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.speech.v1.Adaptation, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const adaptationStubMethods = [\n            'createPhraseSet',\n            'getPhraseSet',\n            'listPhraseSet',\n            'updatePhraseSet',\n            'deletePhraseSet',\n            'createCustomClass',\n            'getCustomClass',\n            'listCustomClasses',\n            'updateCustomClass',\n            'deleteCustomClass',\n        ];\n        for (const methodName of adaptationStubMethods) {\n            const callPromise = this.adaptationStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.page[methodName] || undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.adaptationStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return ['https://www.googleapis.com/auth/cloud-platform'];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    createPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createPhraseSet(request, options, callback);\n    }\n    getPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getPhraseSet(request, options, callback);\n    }\n    updatePhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'phrase_set.name': (_a = request.phraseSet.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updatePhraseSet(request, options, callback);\n    }\n    deletePhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deletePhraseSet(request, options, callback);\n    }\n    createCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createCustomClass(request, options, callback);\n    }\n    getCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getCustomClass(request, options, callback);\n    }\n    updateCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'custom_class.name': (_a = request.customClass.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateCustomClass(request, options, callback);\n    }\n    deleteCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteCustomClass(request, options, callback);\n    }\n    listPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listPhraseSet(request, options, callback);\n    }\n    /**\n     * Equivalent to `listPhraseSet`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent, which owns this collection of phrase set. Format:\n     *\n     *   `projects/{project}/locations/{location}`\n     *\n     *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n     *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n     *   endpoint, use the `global` location. To specify a region, use a\n     *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n     *   with matching `us` or `eu` location value.\n     * @param {number} request.pageSize\n     *   The maximum number of phrase sets to return. The service may return\n     *   fewer than this value. If unspecified, at most 50 phrase sets will be\n     *   returned. The maximum value is 1000; values above 1000 will be coerced to\n     *   1000.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListPhraseSet` call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to `ListPhraseSet` must\n     *   match the call that provided the page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.speech.v1.PhraseSet|PhraseSet} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listPhraseSetAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listPhraseSetStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listPhraseSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listPhraseSet.createStream(this.innerApiCalls.listPhraseSet, request, callSettings);\n    }\n    /**\n     * Equivalent to `listPhraseSet`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent, which owns this collection of phrase set. Format:\n     *\n     *   `projects/{project}/locations/{location}`\n     *\n     *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n     *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n     *   endpoint, use the `global` location. To specify a region, use a\n     *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n     *   with matching `us` or `eu` location value.\n     * @param {number} request.pageSize\n     *   The maximum number of phrase sets to return. The service may return\n     *   fewer than this value. If unspecified, at most 50 phrase sets will be\n     *   returned. The maximum value is 1000; values above 1000 will be coerced to\n     *   1000.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListPhraseSet` call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to `ListPhraseSet` must\n     *   match the call that provided the page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.speech.v1.PhraseSet|PhraseSet}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/adaptation.list_phrase_set.js</caption>\n     * region_tag:speech_v1_generated_Adaptation_ListPhraseSet_async\n     */\n    listPhraseSetAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listPhraseSet'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listPhraseSet.asyncIterate(this.innerApiCalls['listPhraseSet'], request, callSettings);\n    }\n    listCustomClasses(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listCustomClasses(request, options, callback);\n    }\n    /**\n     * Equivalent to `listCustomClasses`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent, which owns this collection of custom classes. Format:\n     *\n     *   `projects/{project}/locations/{location}/customClasses`\n     *\n     *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n     *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n     *   endpoint, use the `global` location. To specify a region, use a\n     *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n     *   with matching `us` or `eu` location value.\n     * @param {number} request.pageSize\n     *   The maximum number of custom classes to return. The service may return\n     *   fewer than this value. If unspecified, at most 50 custom classes will be\n     *   returned. The maximum value is 1000; values above 1000 will be coerced to\n     *   1000.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListCustomClass` call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to `ListCustomClass` must\n     *   match the call that provided the page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.speech.v1.CustomClass|CustomClass} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listCustomClassesAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listCustomClassesStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listCustomClasses'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listCustomClasses.createStream(this.innerApiCalls.listCustomClasses, request, callSettings);\n    }\n    /**\n     * Equivalent to `listCustomClasses`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The parent, which owns this collection of custom classes. Format:\n     *\n     *   `projects/{project}/locations/{location}/customClasses`\n     *\n     *   Speech-to-Text supports three locations: `global`, `us` (US North America),\n     *   and `eu` (Europe). If you are calling the `speech.googleapis.com`\n     *   endpoint, use the `global` location. To specify a region, use a\n     *   [regional endpoint](https://cloud.google.com/speech-to-text/docs/endpoints)\n     *   with matching `us` or `eu` location value.\n     * @param {number} request.pageSize\n     *   The maximum number of custom classes to return. The service may return\n     *   fewer than this value. If unspecified, at most 50 custom classes will be\n     *   returned. The maximum value is 1000; values above 1000 will be coerced to\n     *   1000.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous `ListCustomClass` call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to `ListCustomClass` must\n     *   match the call that provided the page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.speech.v1.CustomClass|CustomClass}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/adaptation.list_custom_classes.js</caption>\n     * region_tag:speech_v1_generated_Adaptation_ListCustomClasses_async\n     */\n    listCustomClassesAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listCustomClasses'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listCustomClasses.asyncIterate(this.innerApiCalls['listCustomClasses'], request, callSettings);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified customClass resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} custom_class\n     * @returns {string} Resource name string.\n     */\n    customClassPath(project, location, customClass) {\n        return this.pathTemplates.customClassPathTemplate.render({\n            project: project,\n            location: location,\n            custom_class: customClass,\n        });\n    }\n    /**\n     * Parse the project from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .project;\n    }\n    /**\n     * Parse the location from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .location;\n    }\n    /**\n     * Parse the custom_class from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the custom_class.\n     */\n    matchCustomClassFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .custom_class;\n    }\n    /**\n     * Return a fully-qualified location resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    locationPath(project, location) {\n        return this.pathTemplates.locationPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).project;\n    }\n    /**\n     * Parse the location from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).location;\n    }\n    /**\n     * Return a fully-qualified phraseSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} phrase_set\n     * @returns {string} Resource name string.\n     */\n    phraseSetPath(project, location, phraseSet) {\n        return this.pathTemplates.phraseSetPathTemplate.render({\n            project: project,\n            location: location,\n            phrase_set: phraseSet,\n        });\n    }\n    /**\n     * Parse the project from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .project;\n    }\n    /**\n     * Parse the location from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .location;\n    }\n    /**\n     * Parse the phrase_set from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the phrase_set.\n     */\n    matchPhraseSetFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .phrase_set;\n    }\n    /**\n     * Return a fully-qualified project resource name string.\n     *\n     * @param {string} project\n     * @returns {string} Resource name string.\n     */\n    projectPath(project) {\n        return this.pathTemplates.projectPathTemplate.render({\n            project: project,\n        });\n    }\n    /**\n     * Parse the project from Project resource.\n     *\n     * @param {string} projectName\n     *   A fully-qualified path representing Project resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProjectName(projectName) {\n        return this.pathTemplates.projectPathTemplate.match(projectName).project;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.adaptationStub && !this._terminated) {\n            return this.adaptationStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.AdaptationClient = AdaptationClient;\n//# sourceMappingURL=adaptation_client.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2476, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40google-cloud/speech/build/src/v1/speech_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2025 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechClient = void 0;\nconst stream_1 = require(\"stream\");\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1/speech_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./speech_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service that implements Google Cloud Speech API.\n * @class\n * @memberof v1\n */\nclass SpeechClient {\n    /**\n     * Construct an instance of SpeechClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new SpeechClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'speech.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            customClassPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/customClasses/{custom_class}'),\n            phraseSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/phraseSets/{phrase_set}'),\n        };\n        // Some of the methods on this service provide streaming responses.\n        // Provide descriptors for these.\n        this.descriptors.stream = {\n            streamingRecognize: new this._gaxModule.StreamDescriptor(this._gaxModule.StreamType.BIDI_STREAMING, !!opts.fallback, !!opts.gaxServerStreamingRetries),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [\n                {\n                    selector: 'google.longrunning.Operations.GetOperation',\n                    get: '/v1/operations/{name=**}',\n                },\n                {\n                    selector: 'google.longrunning.Operations.ListOperations',\n                    get: '/v1/operations',\n                },\n            ];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const longRunningRecognizeResponse = protoFilesRoot.lookup('.google.cloud.speech.v1.LongRunningRecognizeResponse');\n        const longRunningRecognizeMetadata = protoFilesRoot.lookup('.google.cloud.speech.v1.LongRunningRecognizeMetadata');\n        this.descriptors.longrunning = {\n            longRunningRecognize: new this._gaxModule.LongrunningDescriptor(this.operationsClient, longRunningRecognizeResponse.decode.bind(longRunningRecognizeResponse), longRunningRecognizeMetadata.decode.bind(longRunningRecognizeMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.speech.v1.Speech', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.speechStub) {\n            return this.speechStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.speech.v1.Speech.\n        this.speechStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.speech.v1.Speech')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.speech.v1.Speech, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const speechStubMethods = [\n            'recognize',\n            'longRunningRecognize',\n            'streamingRecognize',\n        ];\n        for (const methodName of speechStubMethods) {\n            const callPromise = this.speechStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    if (methodName in this.descriptors.stream) {\n                        const stream = new stream_1.PassThrough({ objectMode: true });\n                        setImmediate(() => {\n                            stream.emit('error', new this._gaxModule.GoogleError('The client has already been closed.'));\n                        });\n                        return stream;\n                    }\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.stream[methodName] ||\n                this.descriptors.longrunning[methodName] ||\n                undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.speechStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return ['https://www.googleapis.com/auth/cloud-platform'];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    recognize(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.recognize(request, options, callback);\n    }\n    /**\n     * Performs bidirectional streaming speech recognition: receive results while\n     * sending audio. This method is only available via the gRPC API (not REST).\n     *\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which is both readable and writable. It accepts objects\n     *   representing {@link protos.google.cloud.speech.v1.StreamingRecognizeRequest|StreamingRecognizeRequest} for write() method, and\n     *   will emit objects representing {@link protos.google.cloud.speech.v1.StreamingRecognizeResponse|StreamingRecognizeResponse} on 'data' event asynchronously.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#bi-directional-streaming | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/speech.streaming_recognize.js</caption>\n     * region_tag:speech_v1_generated_Speech_StreamingRecognize_async\n     */\n    _streamingRecognize(options) {\n        this.initialize();\n        return this.innerApiCalls.streamingRecognize(null, options);\n    }\n    longRunningRecognize(request, optionsOrCallback, callback) {\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        this.initialize();\n        return this.innerApiCalls.longRunningRecognize(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `longRunningRecognize()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v1/speech.long_running_recognize.js</caption>\n     * region_tag:speech_v1_generated_Speech_LongRunningRecognize_async\n     */\n    async checkLongRunningRecognizeProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.longRunningRecognize, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    /**\n     * Gets the latest state of a long-running operation.  Clients can use this\n     * method to poll the operation result at intervals as recommended by the API\n     * service.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     *   for the details.\n     * @param {function(?Error, ?Object)=} callback\n     *   The function which will be called with the result of the API call.\n     *\n     *   The second parameter to the callback is an object representing\n     *   {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * @return {Promise} - The promise which resolves to an array.\n     *   The first element of the array is an object representing\n     * {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * The promise has a method named \"cancel\" which cancels the ongoing API call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * const name = '';\n     * const [response] = await client.getOperation({name});\n     * // doThingsWith(response)\n     * ```\n     */\n    getOperation(request, optionsOrCallback, callback) {\n        var _a;\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        return this.operationsClient.getOperation(request, options, callback);\n    }\n    /**\n     * Lists operations that match the specified filter in the request. If the\n     * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.\n     *\n     * For-await-of syntax is used with the iterable to recursively get response element on-demand.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation collection.\n     * @param {string} request.filter - The standard list filter.\n     * @param {number=} request.pageSize -\n     *   The maximum number of resources contained in the underlying API\n     *   response. If page streaming is performed per-resource, this\n     *   parameter does not affect the return value. If page streaming is\n     *   performed per-page, this determines the maximum number of\n     *   resources in a page.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     *   details.\n     * @returns {Object}\n     *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * for await (const response of client.listOperationsAsync(request));\n     * // doThingsWith(response)\n     * ```\n     */\n    listOperationsAsync(request, options) {\n        var _a;\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        return this.operationsClient.listOperationsAsync(request, options);\n    }\n    /**\n     * Starts asynchronous cancellation on a long-running operation.  The server\n     * makes a best effort to cancel the operation, but success is not\n     * guaranteed.  If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\n     * {@link Operations.GetOperation} or\n     * other methods to check whether the cancellation succeeded or whether the\n     * operation completed despite cancellation. On successful cancellation,\n     * the operation is not deleted; instead, it becomes an operation with\n     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of\n     * 1, corresponding to `Code.CANCELLED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be cancelled.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     * details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.cancelOperation({name: ''});\n     * ```\n     */\n    cancelOperation(request, optionsOrCallback, callback) {\n        var _a;\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        return this.operationsClient.cancelOperation(request, options, callback);\n    }\n    /**\n     * Deletes a long-running operation. This method indicates that the client is\n     * no longer interested in the operation result. It does not cancel the\n     * operation. If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be deleted.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     * for the details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.deleteOperation({name: ''});\n     * ```\n     */\n    deleteOperation(request, optionsOrCallback, callback) {\n        var _a;\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        return this.operationsClient.deleteOperation(request, options, callback);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified customClass resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} custom_class\n     * @returns {string} Resource name string.\n     */\n    customClassPath(project, location, customClass) {\n        return this.pathTemplates.customClassPathTemplate.render({\n            project: project,\n            location: location,\n            custom_class: customClass,\n        });\n    }\n    /**\n     * Parse the project from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .project;\n    }\n    /**\n     * Parse the location from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .location;\n    }\n    /**\n     * Parse the custom_class from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the custom_class.\n     */\n    matchCustomClassFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .custom_class;\n    }\n    /**\n     * Return a fully-qualified phraseSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} phrase_set\n     * @returns {string} Resource name string.\n     */\n    phraseSetPath(project, location, phraseSet) {\n        return this.pathTemplates.phraseSetPathTemplate.render({\n            project: project,\n            location: location,\n            phrase_set: phraseSet,\n        });\n    }\n    /**\n     * Parse the project from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .project;\n    }\n    /**\n     * Parse the location from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .location;\n    }\n    /**\n     * Parse the phrase_set from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the phrase_set.\n     */\n    matchPhraseSetFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .phrase_set;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.speechStub && !this._terminated) {\n            return this.speechStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.SpeechClient = SpeechClient;\n//# sourceMappingURL=speech_client.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAC5E,iEAAiE;AACjE,qDAAqD;AACrD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,YAAY,GAAG,KAAK;AAC5B,MAAM;AACN,MAAM;AACN;;;;CAIC,GACD,MAAM;AACN,MAAM,UAAU,2FAAiC,OAAO;AACxD;;;;CAIC,GACD,MAAM;IACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAsCC,GACD,YAAY,IAAI,EAAE,WAAW,CAAE;QAC3B,IAAI,IAAI,IAAI,IAAI,IAAI;QACpB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,WAAW,GAAG;YACf,MAAM,CAAC;YACP,QAAQ,CAAC;YACT,aAAa,CAAC;YACd,UAAU,CAAC;QACf;QACA,uDAAuD;QACvD,MAAM,gBAAgB,IAAI,CAAC,WAAW;QACtC,IAAI,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,eAAe,KACjE,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,cAAc,KAChE,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,eAAe,MAAM,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,cAAc,GAAG;YAC1I,MAAM,IAAI,MAAM;QACpB;QACA,MAAM,uBAAuB,OAAO,YAAY,YAAY,OAAO,QAAQ,GAAG,KAAK,WAC7E,QAAQ,GAAG,CAAC,+BAA+B,GAC3C;QACN,IAAI,CAAC,eAAe,GAChB,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,cAAc,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,eAAe,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,oBAAoB,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;QAClR,IAAI,CAAC,YAAY,GAAG,YAAY,IAAI,CAAC,eAAe;QACpD,MAAM,cAAc,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,WAAW,KAAK,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,WAAW,KAAK,IAAI,CAAC,YAAY;QACzK,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,WAAW,KAAK,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,WAAW,CAAC;QACrK,MAAM,OAAO,CAAC,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,cAAc,IAAI;QAC1F,MAAM,eAAe,CAAC,KAAK,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,YAAY,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,CAAC;QAC5H,MAAM,WAAW,CAAC,KAAK,SAAS,QAAQ,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,QAAQ,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAM,gBAAkB,eAAe,OAAO,CAAC,WAAW,QAAQ,WAAW,KAAK,IAAI,KAAK,IAAI,OAAO,KAAK,MAAM;QAC/N,OAAO,OAAO,MAAM,CAAC;YAAE;YAAa;YAAM;YAAc;QAAS,GAAG;QACpE,yDAAyD;QACzD,KAAK,YAAY,GAAG;QACpB,0GAA0G;QAC1G,IAAI,gBAAgB,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,YAAY,IAAI,GAAG;YAC1D,IAAI,CAAC,SAAS,GAAG,cAAc,MAAM;QACzC;QACA,iDAAiD;QACjD,IAAI,CAAC,aAAa;YACd;QACJ;QACA,sEAAsE;QACtE,IAAI,CAAC,UAAU,GAAG,KAAK,QAAQ,GAAG,YAAY,QAAQ,GAAG;QACzD,gFAAgF;QAChF,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QAC/C,8CAA8C;QAC9C,IAAI,CAAC,KAAK,GAAG;QACb,gEAAgE;QAChE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI;QAC9B,gDAAgD;QAChD,IAAI,CAAC,IAAI,CAAC,qBAAqB,GAAG;QAClC,6CAA6C;QAC7C,IAAI,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY;QAChD,mDAAmD;QACnD,IAAI,gBAAgB,IAAI,CAAC,YAAY,EAAE;YACnC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,cAAc,MAAM;QAClD;QACA,sCAAsC;QACtC,MAAM,eAAe;YAAC,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YAAE,CAAC,MAAM,EAAE,SAAS;SAAC;QAC3E,IAAI,OAAO,YAAY,YAAY,cAAc,SAAS;YACtD,aAAa,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,QAAQ,CAAC,IAAI,EAAE;QACxD,OACK;YACD,aAAa,IAAI,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;QACzD;QACA,IAAI,CAAC,KAAK,QAAQ,EAAE;YAChB,aAAa,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;QACzD,OACK;YACD,aAAa,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;QACzD;QACA,IAAI,KAAK,OAAO,IAAI,KAAK,UAAU,EAAE;YACjC,aAAa,IAAI,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,EAAE,KAAK,UAAU,EAAE;QAC1D;QACA,8BAA8B;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;QAC3C,8DAA8D;QAC9D,6DAA6D;QAC7D,0CAA0C;QAC1C,IAAI,CAAC,aAAa,GAAG;YACjB,yBAAyB,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;YAC1D,uBAAuB,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;QAC5D;QACA,mEAAmE;QACnE,iCAAiC;QACjC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG;YACtB,oBAAoB,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,KAAK,QAAQ,EAAE,CAAC,CAAC,KAAK,yBAAyB;QACzJ;QACA,MAAM,iBAAiB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC9D,8DAA8D;QAC9D,iEAAiE;QACjE,sCAAsC;QACtC,MAAM,aAAa;YACf,MAAM,IAAI,CAAC,IAAI;YACf,MAAM,UAAU,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG;QACzD;QACA,IAAI,KAAK,QAAQ,EAAE;YACf,WAAW,SAAS,GAAG;YACvB,WAAW,SAAS,GAAG;gBACnB;oBACI,UAAU;oBACV,KAAK;gBACT;gBACA;oBACI,UAAU;oBACV,KAAK;gBACT;aACH;QACL;QACA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAClC,GAAG,CAAC,YACJ,gBAAgB,CAAC;QACtB,MAAM,+BAA+B,eAAe,MAAM,CAAC;QAC3D,MAAM,+BAA+B,eAAe,MAAM,CAAC;QAC3D,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG;YAC3B,sBAAsB,IAAI,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,EAAE,6BAA6B,MAAM,CAAC,IAAI,CAAC,+BAA+B,6BAA6B,MAAM,CAAC,IAAI,CAAC;QAC5M;QACA,uDAAuD;QACvD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,iCAAiC,aAAa,KAAK,YAAY,IAAI,CAAC,GAAG;YAAE,qBAAqB,aAAa,IAAI,CAAC;QAAK;QACtK,oEAAoE;QACpE,gEAAgE;QAChE,4DAA4D;QAC5D,IAAI,CAAC,aAAa,GAAG,CAAC;QACtB,4EAA4E;QAC5E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI;IACpC;IACA;;;;;;;;;;KAUC,GACD,aAAa;QACT,yEAAyE;QACzE,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,OAAO,IAAI,CAAC,UAAU;QAC1B;QACA,sCAAsC;QACtC,iCAAiC;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GACxD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,mCAEzB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,0BAA0B;QAC/F,6DAA6D;QAC7D,0CAA0C;QAC1C,MAAM,oBAAoB;YACtB;YACA;YACA;SACH;QACD,KAAK,MAAM,cAAc,kBAAmB;YACxC,MAAM,cAAc,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA,OAAQ,CAAC,GAAG;oBACjD,IAAI,IAAI,CAAC,WAAW,EAAE;wBAClB,IAAI,cAAc,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;4BACvC,MAAM,SAAS,IAAI,SAAS,WAAW,CAAC;gCAAE,YAAY;4BAAK;4BAC3D,aAAa;gCACT,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;4BACzD;4BACA,OAAO;wBACX;wBACA,OAAO,QAAQ,MAAM,CAAC;oBAC1B;oBACA,MAAM,OAAO,IAAI,CAAC,WAAW;oBAC7B,OAAO,KAAK,KAAK,CAAC,MAAM;gBAC5B,GAAG,CAAC,MAAQ;oBACR,MAAM;gBACV;YACA,MAAM,aAAa,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,IAClD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,IACxC;YACJ,MAAM,UAAU,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ;YACtH,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG;QACrC;QACA,OAAO,IAAI,CAAC,UAAU;IAC1B;IACA;;;;KAIC,GACD,WAAW,cAAc;QACrB,IAAI,OAAO,YAAY,YACnB,OAAO,QAAQ,WAAW,KAAK,YAAY;YAC3C,QAAQ,WAAW,CAAC,6EAA6E;QACrG;QACA,OAAO;IACX;IACA;;;;KAIC,GACD,WAAW,cAAc;QACrB,IAAI,OAAO,YAAY,YACnB,OAAO,QAAQ,WAAW,KAAK,YAAY;YAC3C,QAAQ,WAAW,CAAC,6EAA6E;QACrG;QACA,OAAO;IACX;IACA;;;KAGC,GACD,IAAI,cAAc;QACd,OAAO,IAAI,CAAC,YAAY;IAC5B;IACA,IAAI,iBAAiB;QACjB,OAAO,IAAI,CAAC,eAAe;IAC/B;IACA;;;KAGC,GACD,WAAW,OAAO;QACd,OAAO;IACX;IACA;;;;KAIC,GACD,WAAW,SAAS;QAChB,OAAO;YAAC;SAAiD;IAC7D;IACA;;;KAGC,GACD,aAAa,QAAQ,EAAE;QACnB,IAAI,UAAU;YACV,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;YACvB;QACJ;QACA,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY;IACjC;IACA,UAAU,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE;QAC5C,UAAU,WAAW,CAAC;QACtB,IAAI;QACJ,IAAI,OAAO,sBAAsB,cAAc,aAAa,WAAW;YACnE,WAAW;YACX,UAAU,CAAC;QACf,OACK;YACD,UAAU;QACd;QACA,UAAU,WAAW,CAAC;QACtB,QAAQ,SAAS,GAAG,QAAQ,SAAS,IAAI,CAAC;QAC1C,QAAQ,SAAS,CAAC,OAAO,GAAG,QAAQ,SAAS,CAAC,OAAO,IAAI,CAAC;QAC1D,IAAI,CAAC,UAAU;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,SAAS;IAC1D;IACA;;;;;;;;;;;;;;KAcC,GACD,oBAAoB,OAAO,EAAE;QACzB,IAAI,CAAC,UAAU;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,MAAM;IACvD;IACA,qBAAqB,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE;QACvD,UAAU,WAAW,CAAC;QACtB,IAAI;QACJ,IAAI,OAAO,sBAAsB,cAAc,aAAa,WAAW;YACnE,WAAW;YACX,UAAU,CAAC;QACf,OACK;YACD,UAAU;QACd;QACA,UAAU,WAAW,CAAC;QACtB,QAAQ,SAAS,GAAG,QAAQ,SAAS,IAAI,CAAC;QAC1C,QAAQ,SAAS,CAAC,OAAO,GAAG,QAAQ,SAAS,CAAC,OAAO,IAAI,CAAC;QAC1D,IAAI,CAAC,UAAU;QACf,OAAO,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,SAAS,SAAS;IACrE;IACA;;;;;;;;;;KAUC,GACD,MAAM,kCAAkC,IAAI,EAAE;QAC1C,MAAM,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC;YAAE;QAAK;QACnG,MAAM,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;QAC7D,MAAM,kBAAkB,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,oBAAoB,EAAE,IAAI,CAAC,UAAU,CAAC,4BAA4B;QAChK,OAAO;IACX;IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6BC,GACD,aAAa,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE;QAC/C,IAAI;QACJ,IAAI;QACJ,IAAI,OAAO,sBAAsB,cAAc,aAAa,WAAW;YACnE,WAAW;YACX,UAAU,CAAC;QACf,OACK;YACD,UAAU;QACd;QACA,UAAU,WAAW,CAAC;QACtB,QAAQ,SAAS,GAAG,QAAQ,SAAS,IAAI,CAAC;QAC1C,QAAQ,SAAS,CAAC,OAAO,GAAG,QAAQ,SAAS,CAAC,OAAO,IAAI,CAAC;QAC1D,QAAQ,SAAS,CAAC,OAAO,CAAC,wBAAwB,GAC9C,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC;YACrC,MAAM,CAAC,KAAK,QAAQ,IAAI,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;QAC/D;QACJ,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,SAAS;IAChE;IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6BC,GACD,oBAAoB,OAAO,EAAE,OAAO,EAAE;QAClC,IAAI;QACJ,UAAU,WAAW,CAAC;QACtB,QAAQ,SAAS,GAAG,QAAQ,SAAS,IAAI,CAAC;QAC1C,QAAQ,SAAS,CAAC,OAAO,GAAG,QAAQ,SAAS,CAAC,OAAO,IAAI,CAAC;QAC1D,QAAQ,SAAS,CAAC,OAAO,CAAC,wBAAwB,GAC9C,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC;YACrC,MAAM,CAAC,KAAK,QAAQ,IAAI,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;QAC/D;QACJ,OAAO,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,SAAS;IAC9D;IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8BC,GACD,gBAAgB,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE;QAClD,IAAI;QACJ,IAAI;QACJ,IAAI,OAAO,sBAAsB,cAAc,aAAa,WAAW;YACnE,WAAW;YACX,UAAU,CAAC;QACf,OACK;YACD,UAAU;QACd;QACA,UAAU,WAAW,CAAC;QACtB,QAAQ,SAAS,GAAG,QAAQ,SAAS,IAAI,CAAC;QAC1C,QAAQ,SAAS,CAAC,OAAO,GAAG,QAAQ,SAAS,CAAC,OAAO,IAAI,CAAC;QAC1D,QAAQ,SAAS,CAAC,OAAO,CAAC,wBAAwB,GAC9C,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC;YACrC,MAAM,CAAC,KAAK,QAAQ,IAAI,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;QAC/D;QACJ,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,SAAS,SAAS;IACnE;IACA;;;;;;;;;;;;;;;;;;;;;;;;KAwBC,GACD,gBAAgB,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE;QAClD,IAAI;QACJ,IAAI;QACJ,IAAI,OAAO,sBAAsB,cAAc,aAAa,WAAW;YACnE,WAAW;YACX,UAAU,CAAC;QACf,OACK;YACD,UAAU;QACd;QACA,UAAU,WAAW,CAAC;QACtB,QAAQ,SAAS,GAAG,QAAQ,SAAS,IAAI,CAAC;QAC1C,QAAQ,SAAS,CAAC,OAAO,GAAG,QAAQ,SAAS,CAAC,OAAO,IAAI,CAAC;QAC1D,QAAQ,SAAS,CAAC,OAAO,CAAC,wBAAwB,GAC9C,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC;YACrC,MAAM,CAAC,KAAK,QAAQ,IAAI,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK;QAC/D;QACJ,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,SAAS,SAAS;IACnE;IACA,uBAAuB;IACvB,uBAAuB;IACvB,uBAAuB;IACvB;;;;;;;KAOC,GACD,gBAAgB,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE;QAC5C,OAAO,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,MAAM,CAAC;YACrD,SAAS;YACT,UAAU;YACV,cAAc;QAClB;IACJ;IACA;;;;;;KAMC,GACD,gCAAgC,eAAe,EAAE;QAC7C,OAAO,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,KAAK,CAAC,iBACnD,OAAO;IAChB;IACA;;;;;;KAMC,GACD,iCAAiC,eAAe,EAAE;QAC9C,OAAO,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,KAAK,CAAC,iBACnD,QAAQ;IACjB;IACA;;;;;;KAMC,GACD,oCAAoC,eAAe,EAAE;QACjD,OAAO,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,KAAK,CAAC,iBACnD,YAAY;IACrB;IACA;;;;;;;KAOC,GACD,cAAc,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE;QACxC,OAAO,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,MAAM,CAAC;YACnD,SAAS;YACT,UAAU;YACV,YAAY;QAChB;IACJ;IACA;;;;;;KAMC,GACD,8BAA8B,aAAa,EAAE;QACzC,OAAO,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,KAAK,CAAC,eACjD,OAAO;IAChB;IACA;;;;;;KAMC,GACD,+BAA+B,aAAa,EAAE;QAC1C,OAAO,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,KAAK,CAAC,eACjD,QAAQ;IACjB;IACA;;;;;;KAMC,GACD,gCAAgC,aAAa,EAAE;QAC3C,OAAO,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,KAAK,CAAC,eACjD,UAAU;IACnB;IACA;;;;;KAKC,GACD,QAAQ;QACJ,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACtC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;gBACxB,IAAI,CAAC,WAAW,GAAG;gBACnB,KAAK,KAAK;gBACV,IAAI,CAAC,gBAAgB,CAAC,KAAK;YAC/B;QACJ;QACA,OAAO,QAAQ,OAAO;IAC1B;AACJ;AACA,QAAQ,YAAY,GAAG,cACvB,yCAAyC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3123, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40google-cloud/speech/build/src/v1/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2025 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechClient = exports.AdaptationClient = void 0;\nvar adaptation_client_1 = require(\"./adaptation_client\");\nObject.defineProperty(exports, \"AdaptationClient\", { enumerable: true, get: function () { return adaptation_client_1.AdaptationClient; } });\nvar speech_client_1 = require(\"./speech_client\");\nObject.defineProperty(exports, \"SpeechClient\", { enumerable: true, get: function () { return speech_client_1.SpeechClient; } });\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAC5E,iEAAiE;AACjE,qDAAqD;AACrD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,YAAY,GAAG,QAAQ,gBAAgB,GAAG,KAAK;AACvD,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,oBAAoB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,oBAAoB,gBAAgB;IAAE;AAAE;AACzI,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,gBAAgB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,gBAAgB,YAAY;IAAE;AAAE,IAC7H,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3169, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40google-cloud/speech/build/src/v2/speech_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2025 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechClient = void 0;\nconst stream_1 = require(\"stream\");\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v2/speech_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./speech_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Enables speech transcription and resource management.\n * @class\n * @memberof v2\n */\nclass SpeechClient {\n    /**\n     * Construct an instance of SpeechClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new SpeechClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'speech.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        this.locationsClient = new this._gaxModule.LocationsClient(this._gaxGrpc, opts);\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            configPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/config'),\n            cryptoKeyPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}'),\n            cryptoKeyVersionPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}'),\n            customClassPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/customClasses/{custom_class}'),\n            locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n            phraseSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/phraseSets/{phrase_set}'),\n            projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}'),\n            recognizerPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/recognizers/{recognizer}'),\n        };\n        // Some of the methods on this service return \"paged\" results,\n        // (e.g. 50 results at a time, with tokens to get subsequent\n        // pages). Denote the keys used for pagination and results.\n        this.descriptors.page = {\n            listRecognizers: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'recognizers'),\n            listCustomClasses: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'customClasses'),\n            listPhraseSets: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'phraseSets'),\n        };\n        // Some of the methods on this service provide streaming responses.\n        // Provide descriptors for these.\n        this.descriptors.stream = {\n            streamingRecognize: new this._gaxModule.StreamDescriptor(this._gaxModule.StreamType.BIDI_STREAMING, !!opts.fallback, !!opts.gaxServerStreamingRetries),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [\n                {\n                    selector: 'google.cloud.location.Locations.GetLocation',\n                    get: '/v2/{name=projects/*/locations/*}',\n                },\n                {\n                    selector: 'google.cloud.location.Locations.ListLocations',\n                    get: '/v2/{name=projects/*}/locations',\n                },\n                {\n                    selector: 'google.longrunning.Operations.CancelOperation',\n                    post: '/v2/{name=projects/*/locations/*/operations/*}:cancel',\n                    body: '*',\n                },\n                {\n                    selector: 'google.longrunning.Operations.DeleteOperation',\n                    delete: '/v2/{name=projects/*/locations/*/operations/*}',\n                },\n                {\n                    selector: 'google.longrunning.Operations.GetOperation',\n                    get: '/v2/{name=projects/*/locations/*/operations/*}',\n                },\n                {\n                    selector: 'google.longrunning.Operations.ListOperations',\n                    get: '/v2/{name=projects/*/locations/*}/operations',\n                },\n            ];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const createRecognizerResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.Recognizer');\n        const createRecognizerMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const updateRecognizerResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.Recognizer');\n        const updateRecognizerMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const deleteRecognizerResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.Recognizer');\n        const deleteRecognizerMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const undeleteRecognizerResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.Recognizer');\n        const undeleteRecognizerMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const batchRecognizeResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.BatchRecognizeResponse');\n        const batchRecognizeMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const createCustomClassResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.CustomClass');\n        const createCustomClassMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const updateCustomClassResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.CustomClass');\n        const updateCustomClassMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const deleteCustomClassResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.CustomClass');\n        const deleteCustomClassMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const undeleteCustomClassResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.CustomClass');\n        const undeleteCustomClassMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const createPhraseSetResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.PhraseSet');\n        const createPhraseSetMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const updatePhraseSetResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.PhraseSet');\n        const updatePhraseSetMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const deletePhraseSetResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.PhraseSet');\n        const deletePhraseSetMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const undeletePhraseSetResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.PhraseSet');\n        const undeletePhraseSetMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        this.descriptors.longrunning = {\n            createRecognizer: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createRecognizerResponse.decode.bind(createRecognizerResponse), createRecognizerMetadata.decode.bind(createRecognizerMetadata)),\n            updateRecognizer: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updateRecognizerResponse.decode.bind(updateRecognizerResponse), updateRecognizerMetadata.decode.bind(updateRecognizerMetadata)),\n            deleteRecognizer: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteRecognizerResponse.decode.bind(deleteRecognizerResponse), deleteRecognizerMetadata.decode.bind(deleteRecognizerMetadata)),\n            undeleteRecognizer: new this._gaxModule.LongrunningDescriptor(this.operationsClient, undeleteRecognizerResponse.decode.bind(undeleteRecognizerResponse), undeleteRecognizerMetadata.decode.bind(undeleteRecognizerMetadata)),\n            batchRecognize: new this._gaxModule.LongrunningDescriptor(this.operationsClient, batchRecognizeResponse.decode.bind(batchRecognizeResponse), batchRecognizeMetadata.decode.bind(batchRecognizeMetadata)),\n            createCustomClass: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createCustomClassResponse.decode.bind(createCustomClassResponse), createCustomClassMetadata.decode.bind(createCustomClassMetadata)),\n            updateCustomClass: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updateCustomClassResponse.decode.bind(updateCustomClassResponse), updateCustomClassMetadata.decode.bind(updateCustomClassMetadata)),\n            deleteCustomClass: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteCustomClassResponse.decode.bind(deleteCustomClassResponse), deleteCustomClassMetadata.decode.bind(deleteCustomClassMetadata)),\n            undeleteCustomClass: new this._gaxModule.LongrunningDescriptor(this.operationsClient, undeleteCustomClassResponse.decode.bind(undeleteCustomClassResponse), undeleteCustomClassMetadata.decode.bind(undeleteCustomClassMetadata)),\n            createPhraseSet: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createPhraseSetResponse.decode.bind(createPhraseSetResponse), createPhraseSetMetadata.decode.bind(createPhraseSetMetadata)),\n            updatePhraseSet: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updatePhraseSetResponse.decode.bind(updatePhraseSetResponse), updatePhraseSetMetadata.decode.bind(updatePhraseSetMetadata)),\n            deletePhraseSet: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deletePhraseSetResponse.decode.bind(deletePhraseSetResponse), deletePhraseSetMetadata.decode.bind(deletePhraseSetMetadata)),\n            undeletePhraseSet: new this._gaxModule.LongrunningDescriptor(this.operationsClient, undeletePhraseSetResponse.decode.bind(undeletePhraseSetResponse), undeletePhraseSetMetadata.decode.bind(undeletePhraseSetMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.speech.v2.Speech', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.speechStub) {\n            return this.speechStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.speech.v2.Speech.\n        this.speechStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.speech.v2.Speech')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.speech.v2.Speech, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const speechStubMethods = [\n            'createRecognizer',\n            'listRecognizers',\n            'getRecognizer',\n            'updateRecognizer',\n            'deleteRecognizer',\n            'undeleteRecognizer',\n            'recognize',\n            'streamingRecognize',\n            'batchRecognize',\n            'getConfig',\n            'updateConfig',\n            'createCustomClass',\n            'listCustomClasses',\n            'getCustomClass',\n            'updateCustomClass',\n            'deleteCustomClass',\n            'undeleteCustomClass',\n            'createPhraseSet',\n            'listPhraseSets',\n            'getPhraseSet',\n            'updatePhraseSet',\n            'deletePhraseSet',\n            'undeletePhraseSet',\n        ];\n        for (const methodName of speechStubMethods) {\n            const callPromise = this.speechStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    if (methodName in this.descriptors.stream) {\n                        const stream = new stream_1.PassThrough({ objectMode: true });\n                        setImmediate(() => {\n                            stream.emit('error', new this._gaxModule.GoogleError('The client has already been closed.'));\n                        });\n                        return stream;\n                    }\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.page[methodName] ||\n                this.descriptors.stream[methodName] ||\n                this.descriptors.longrunning[methodName] ||\n                undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.speechStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return ['https://www.googleapis.com/auth/cloud-platform'];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    getRecognizer(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getRecognizer(request, options, callback);\n    }\n    recognize(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                recognizer: (_a = request.recognizer) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.recognize(request, options, callback);\n    }\n    getConfig(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getConfig(request, options, callback);\n    }\n    updateConfig(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'config.name': (_a = request.config.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateConfig(request, options, callback);\n    }\n    getCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getCustomClass(request, options, callback);\n    }\n    getPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getPhraseSet(request, options, callback);\n    }\n    /**\n     * Performs bidirectional streaming speech recognition: receive results while\n     * sending audio. This method is only available via the gRPC API (not REST).\n     *\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which is both readable and writable. It accepts objects\n     *   representing {@link protos.google.cloud.speech.v2.StreamingRecognizeRequest|StreamingRecognizeRequest} for write() method, and\n     *   will emit objects representing {@link protos.google.cloud.speech.v2.StreamingRecognizeResponse|StreamingRecognizeResponse} on 'data' event asynchronously.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#bi-directional-streaming | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.streaming_recognize.js</caption>\n     * region_tag:speech_v2_generated_Speech_StreamingRecognize_async\n     */\n    _streamingRecognize(options) {\n        this.initialize();\n        return this.innerApiCalls.streamingRecognize(null, options);\n    }\n    createRecognizer(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createRecognizer(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `createRecognizer()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.create_recognizer.js</caption>\n     * region_tag:speech_v2_generated_Speech_CreateRecognizer_async\n     */\n    async checkCreateRecognizerProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createRecognizer, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    updateRecognizer(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'recognizer.name': (_a = request.recognizer.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateRecognizer(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `updateRecognizer()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.update_recognizer.js</caption>\n     * region_tag:speech_v2_generated_Speech_UpdateRecognizer_async\n     */\n    async checkUpdateRecognizerProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updateRecognizer, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    deleteRecognizer(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteRecognizer(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `deleteRecognizer()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.delete_recognizer.js</caption>\n     * region_tag:speech_v2_generated_Speech_DeleteRecognizer_async\n     */\n    async checkDeleteRecognizerProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteRecognizer, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    undeleteRecognizer(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.undeleteRecognizer(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `undeleteRecognizer()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.undelete_recognizer.js</caption>\n     * region_tag:speech_v2_generated_Speech_UndeleteRecognizer_async\n     */\n    async checkUndeleteRecognizerProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.undeleteRecognizer, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    batchRecognize(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                recognizer: (_a = request.recognizer) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.batchRecognize(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `batchRecognize()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.batch_recognize.js</caption>\n     * region_tag:speech_v2_generated_Speech_BatchRecognize_async\n     */\n    async checkBatchRecognizeProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.batchRecognize, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    createCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createCustomClass(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `createCustomClass()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.create_custom_class.js</caption>\n     * region_tag:speech_v2_generated_Speech_CreateCustomClass_async\n     */\n    async checkCreateCustomClassProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createCustomClass, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    updateCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'custom_class.name': (_a = request.customClass.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateCustomClass(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `updateCustomClass()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.update_custom_class.js</caption>\n     * region_tag:speech_v2_generated_Speech_UpdateCustomClass_async\n     */\n    async checkUpdateCustomClassProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updateCustomClass, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    deleteCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteCustomClass(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `deleteCustomClass()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.delete_custom_class.js</caption>\n     * region_tag:speech_v2_generated_Speech_DeleteCustomClass_async\n     */\n    async checkDeleteCustomClassProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteCustomClass, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    undeleteCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.undeleteCustomClass(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `undeleteCustomClass()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.undelete_custom_class.js</caption>\n     * region_tag:speech_v2_generated_Speech_UndeleteCustomClass_async\n     */\n    async checkUndeleteCustomClassProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.undeleteCustomClass, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    createPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createPhraseSet(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `createPhraseSet()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.create_phrase_set.js</caption>\n     * region_tag:speech_v2_generated_Speech_CreatePhraseSet_async\n     */\n    async checkCreatePhraseSetProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createPhraseSet, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    updatePhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'phrase_set.name': (_a = request.phraseSet.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updatePhraseSet(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `updatePhraseSet()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.update_phrase_set.js</caption>\n     * region_tag:speech_v2_generated_Speech_UpdatePhraseSet_async\n     */\n    async checkUpdatePhraseSetProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updatePhraseSet, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    deletePhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deletePhraseSet(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `deletePhraseSet()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.delete_phrase_set.js</caption>\n     * region_tag:speech_v2_generated_Speech_DeletePhraseSet_async\n     */\n    async checkDeletePhraseSetProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deletePhraseSet, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    undeletePhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.undeletePhraseSet(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `undeletePhraseSet()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.undelete_phrase_set.js</caption>\n     * region_tag:speech_v2_generated_Speech_UndeletePhraseSet_async\n     */\n    async checkUndeletePhraseSetProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.undeletePhraseSet, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    listRecognizers(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listRecognizers(request, options, callback);\n    }\n    /**\n     * Equivalent to `listRecognizers`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project and location of Recognizers to list. The expected\n     *   format is `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   The maximum number of Recognizers to return. The service may return fewer\n     *   than this value. If unspecified, at most 5 Recognizers will be returned.\n     *   The maximum value is 100; values above 100 will be coerced to 100.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous\n     *   {@link protos.google.cloud.speech.v2.Speech.ListRecognizers|ListRecognizers} call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to\n     *   {@link protos.google.cloud.speech.v2.Speech.ListRecognizers|ListRecognizers} must match\n     *   the call that provided the page token.\n     * @param {boolean} request.showDeleted\n     *   Whether, or not, to show resources that have been deleted.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.speech.v2.Recognizer|Recognizer} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listRecognizersAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listRecognizersStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listRecognizers'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listRecognizers.createStream(this.innerApiCalls.listRecognizers, request, callSettings);\n    }\n    /**\n     * Equivalent to `listRecognizers`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project and location of Recognizers to list. The expected\n     *   format is `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   The maximum number of Recognizers to return. The service may return fewer\n     *   than this value. If unspecified, at most 5 Recognizers will be returned.\n     *   The maximum value is 100; values above 100 will be coerced to 100.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous\n     *   {@link protos.google.cloud.speech.v2.Speech.ListRecognizers|ListRecognizers} call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to\n     *   {@link protos.google.cloud.speech.v2.Speech.ListRecognizers|ListRecognizers} must match\n     *   the call that provided the page token.\n     * @param {boolean} request.showDeleted\n     *   Whether, or not, to show resources that have been deleted.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.speech.v2.Recognizer|Recognizer}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.list_recognizers.js</caption>\n     * region_tag:speech_v2_generated_Speech_ListRecognizers_async\n     */\n    listRecognizersAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listRecognizers'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listRecognizers.asyncIterate(this.innerApiCalls['listRecognizers'], request, callSettings);\n    }\n    listCustomClasses(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listCustomClasses(request, options, callback);\n    }\n    /**\n     * Equivalent to `listCustomClasses`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project and location of CustomClass resources to list. The\n     *   expected format is `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   Number of results per requests. A valid page_size ranges from 0 to 100\n     *   inclusive. If the page_size is zero or unspecified, a page size of 5 will\n     *   be chosen. If the page size exceeds 100, it will be coerced down to 100.\n     *   Note that a call might return fewer results than the requested page size.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous\n     *   {@link protos.google.cloud.speech.v2.Speech.ListCustomClasses|ListCustomClasses} call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to\n     *   {@link protos.google.cloud.speech.v2.Speech.ListCustomClasses|ListCustomClasses} must\n     *   match the call that provided the page token.\n     * @param {boolean} request.showDeleted\n     *   Whether, or not, to show resources that have been deleted.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.speech.v2.CustomClass|CustomClass} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listCustomClassesAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listCustomClassesStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listCustomClasses'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listCustomClasses.createStream(this.innerApiCalls.listCustomClasses, request, callSettings);\n    }\n    /**\n     * Equivalent to `listCustomClasses`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project and location of CustomClass resources to list. The\n     *   expected format is `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   Number of results per requests. A valid page_size ranges from 0 to 100\n     *   inclusive. If the page_size is zero or unspecified, a page size of 5 will\n     *   be chosen. If the page size exceeds 100, it will be coerced down to 100.\n     *   Note that a call might return fewer results than the requested page size.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous\n     *   {@link protos.google.cloud.speech.v2.Speech.ListCustomClasses|ListCustomClasses} call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to\n     *   {@link protos.google.cloud.speech.v2.Speech.ListCustomClasses|ListCustomClasses} must\n     *   match the call that provided the page token.\n     * @param {boolean} request.showDeleted\n     *   Whether, or not, to show resources that have been deleted.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.speech.v2.CustomClass|CustomClass}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.list_custom_classes.js</caption>\n     * region_tag:speech_v2_generated_Speech_ListCustomClasses_async\n     */\n    listCustomClassesAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listCustomClasses'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listCustomClasses.asyncIterate(this.innerApiCalls['listCustomClasses'], request, callSettings);\n    }\n    listPhraseSets(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listPhraseSets(request, options, callback);\n    }\n    /**\n     * Equivalent to `listPhraseSets`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project and location of PhraseSet resources to list. The\n     *   expected format is `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   The maximum number of PhraseSets to return. The service may return fewer\n     *   than this value. If unspecified, at most 5 PhraseSets will be returned.\n     *   The maximum value is 100; values above 100 will be coerced to 100.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous\n     *   {@link protos.google.cloud.speech.v2.Speech.ListPhraseSets|ListPhraseSets} call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to\n     *   {@link protos.google.cloud.speech.v2.Speech.ListPhraseSets|ListPhraseSets} must match\n     *   the call that provided the page token.\n     * @param {boolean} request.showDeleted\n     *   Whether, or not, to show resources that have been deleted.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.speech.v2.PhraseSet|PhraseSet} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listPhraseSetsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listPhraseSetsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listPhraseSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listPhraseSets.createStream(this.innerApiCalls.listPhraseSets, request, callSettings);\n    }\n    /**\n     * Equivalent to `listPhraseSets`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project and location of PhraseSet resources to list. The\n     *   expected format is `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   The maximum number of PhraseSets to return. The service may return fewer\n     *   than this value. If unspecified, at most 5 PhraseSets will be returned.\n     *   The maximum value is 100; values above 100 will be coerced to 100.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous\n     *   {@link protos.google.cloud.speech.v2.Speech.ListPhraseSets|ListPhraseSets} call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to\n     *   {@link protos.google.cloud.speech.v2.Speech.ListPhraseSets|ListPhraseSets} must match\n     *   the call that provided the page token.\n     * @param {boolean} request.showDeleted\n     *   Whether, or not, to show resources that have been deleted.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.speech.v2.PhraseSet|PhraseSet}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.list_phrase_sets.js</caption>\n     * region_tag:speech_v2_generated_Speech_ListPhraseSets_async\n     */\n    listPhraseSetsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listPhraseSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listPhraseSets.asyncIterate(this.innerApiCalls['listPhraseSets'], request, callSettings);\n    }\n    /**\n     * Gets information about a location.\n     *\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Resource name for the location.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.\n     * @returns {Promise} - The promise which resolves to an array.\n     *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }\n     *   for more details and examples.\n     * @example\n     * ```\n     * const [response] = await client.getLocation(request);\n     * ```\n     */\n    getLocation(request, options, callback) {\n        return this.locationsClient.getLocation(request, options, callback);\n    }\n    /**\n     * Lists information about the supported locations for this service. Returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   The resource that owns the locations collection, if applicable.\n     * @param {string} request.filter\n     *   The standard list filter.\n     * @param {number} request.pageSize\n     *   The standard list page size.\n     * @param {string} request.pageToken\n     *   The standard list page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example\n     * ```\n     * const iterable = client.listLocationsAsync(request);\n     * for await (const response of iterable) {\n     *   // process response\n     * }\n     * ```\n     */\n    listLocationsAsync(request, options) {\n        return this.locationsClient.listLocationsAsync(request, options);\n    }\n    /**\n     * Gets the latest state of a long-running operation.  Clients can use this\n     * method to poll the operation result at intervals as recommended by the API\n     * service.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     *   for the details.\n     * @param {function(?Error, ?Object)=} callback\n     *   The function which will be called with the result of the API call.\n     *\n     *   The second parameter to the callback is an object representing\n     *   {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * @return {Promise} - The promise which resolves to an array.\n     *   The first element of the array is an object representing\n     * {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * The promise has a method named \"cancel\" which cancels the ongoing API call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * const name = '';\n     * const [response] = await client.getOperation({name});\n     * // doThingsWith(response)\n     * ```\n     */\n    getOperation(request, optionsOrCallback, callback) {\n        var _a;\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        return this.operationsClient.getOperation(request, options, callback);\n    }\n    /**\n     * Lists operations that match the specified filter in the request. If the\n     * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.\n     *\n     * For-await-of syntax is used with the iterable to recursively get response element on-demand.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation collection.\n     * @param {string} request.filter - The standard list filter.\n     * @param {number=} request.pageSize -\n     *   The maximum number of resources contained in the underlying API\n     *   response. If page streaming is performed per-resource, this\n     *   parameter does not affect the return value. If page streaming is\n     *   performed per-page, this determines the maximum number of\n     *   resources in a page.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     *   details.\n     * @returns {Object}\n     *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * for await (const response of client.listOperationsAsync(request));\n     * // doThingsWith(response)\n     * ```\n     */\n    listOperationsAsync(request, options) {\n        var _a;\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        return this.operationsClient.listOperationsAsync(request, options);\n    }\n    /**\n     * Starts asynchronous cancellation on a long-running operation.  The server\n     * makes a best effort to cancel the operation, but success is not\n     * guaranteed.  If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\n     * {@link Operations.GetOperation} or\n     * other methods to check whether the cancellation succeeded or whether the\n     * operation completed despite cancellation. On successful cancellation,\n     * the operation is not deleted; instead, it becomes an operation with\n     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of\n     * 1, corresponding to `Code.CANCELLED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be cancelled.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     * details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.cancelOperation({name: ''});\n     * ```\n     */\n    cancelOperation(request, optionsOrCallback, callback) {\n        var _a;\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        return this.operationsClient.cancelOperation(request, options, callback);\n    }\n    /**\n     * Deletes a long-running operation. This method indicates that the client is\n     * no longer interested in the operation result. It does not cancel the\n     * operation. If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be deleted.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     * for the details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.deleteOperation({name: ''});\n     * ```\n     */\n    deleteOperation(request, optionsOrCallback, callback) {\n        var _a;\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        return this.operationsClient.deleteOperation(request, options, callback);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified config resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    configPath(project, location) {\n        return this.pathTemplates.configPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Config resource.\n     *\n     * @param {string} configName\n     *   A fully-qualified path representing Config resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromConfigName(configName) {\n        return this.pathTemplates.configPathTemplate.match(configName).project;\n    }\n    /**\n     * Parse the location from Config resource.\n     *\n     * @param {string} configName\n     *   A fully-qualified path representing Config resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromConfigName(configName) {\n        return this.pathTemplates.configPathTemplate.match(configName).location;\n    }\n    /**\n     * Return a fully-qualified cryptoKey resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} key_ring\n     * @param {string} crypto_key\n     * @returns {string} Resource name string.\n     */\n    cryptoKeyPath(project, location, keyRing, cryptoKey) {\n        return this.pathTemplates.cryptoKeyPathTemplate.render({\n            project: project,\n            location: location,\n            key_ring: keyRing,\n            crypto_key: cryptoKey,\n        });\n    }\n    /**\n     * Parse the project from CryptoKey resource.\n     *\n     * @param {string} cryptoKeyName\n     *   A fully-qualified path representing CryptoKey resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromCryptoKeyName(cryptoKeyName) {\n        return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName)\n            .project;\n    }\n    /**\n     * Parse the location from CryptoKey resource.\n     *\n     * @param {string} cryptoKeyName\n     *   A fully-qualified path representing CryptoKey resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromCryptoKeyName(cryptoKeyName) {\n        return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName)\n            .location;\n    }\n    /**\n     * Parse the key_ring from CryptoKey resource.\n     *\n     * @param {string} cryptoKeyName\n     *   A fully-qualified path representing CryptoKey resource.\n     * @returns {string} A string representing the key_ring.\n     */\n    matchKeyRingFromCryptoKeyName(cryptoKeyName) {\n        return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName)\n            .key_ring;\n    }\n    /**\n     * Parse the crypto_key from CryptoKey resource.\n     *\n     * @param {string} cryptoKeyName\n     *   A fully-qualified path representing CryptoKey resource.\n     * @returns {string} A string representing the crypto_key.\n     */\n    matchCryptoKeyFromCryptoKeyName(cryptoKeyName) {\n        return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName)\n            .crypto_key;\n    }\n    /**\n     * Return a fully-qualified cryptoKeyVersion resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} key_ring\n     * @param {string} crypto_key\n     * @param {string} crypto_key_version\n     * @returns {string} Resource name string.\n     */\n    cryptoKeyVersionPath(project, location, keyRing, cryptoKey, cryptoKeyVersion) {\n        return this.pathTemplates.cryptoKeyVersionPathTemplate.render({\n            project: project,\n            location: location,\n            key_ring: keyRing,\n            crypto_key: cryptoKey,\n            crypto_key_version: cryptoKeyVersion,\n        });\n    }\n    /**\n     * Parse the project from CryptoKeyVersion resource.\n     *\n     * @param {string} cryptoKeyVersionName\n     *   A fully-qualified path representing CryptoKeyVersion resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromCryptoKeyVersionName(cryptoKeyVersionName) {\n        return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).project;\n    }\n    /**\n     * Parse the location from CryptoKeyVersion resource.\n     *\n     * @param {string} cryptoKeyVersionName\n     *   A fully-qualified path representing CryptoKeyVersion resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromCryptoKeyVersionName(cryptoKeyVersionName) {\n        return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).location;\n    }\n    /**\n     * Parse the key_ring from CryptoKeyVersion resource.\n     *\n     * @param {string} cryptoKeyVersionName\n     *   A fully-qualified path representing CryptoKeyVersion resource.\n     * @returns {string} A string representing the key_ring.\n     */\n    matchKeyRingFromCryptoKeyVersionName(cryptoKeyVersionName) {\n        return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).key_ring;\n    }\n    /**\n     * Parse the crypto_key from CryptoKeyVersion resource.\n     *\n     * @param {string} cryptoKeyVersionName\n     *   A fully-qualified path representing CryptoKeyVersion resource.\n     * @returns {string} A string representing the crypto_key.\n     */\n    matchCryptoKeyFromCryptoKeyVersionName(cryptoKeyVersionName) {\n        return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).crypto_key;\n    }\n    /**\n     * Parse the crypto_key_version from CryptoKeyVersion resource.\n     *\n     * @param {string} cryptoKeyVersionName\n     *   A fully-qualified path representing CryptoKeyVersion resource.\n     * @returns {string} A string representing the crypto_key_version.\n     */\n    matchCryptoKeyVersionFromCryptoKeyVersionName(cryptoKeyVersionName) {\n        return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).crypto_key_version;\n    }\n    /**\n     * Return a fully-qualified customClass resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} custom_class\n     * @returns {string} Resource name string.\n     */\n    customClassPath(project, location, customClass) {\n        return this.pathTemplates.customClassPathTemplate.render({\n            project: project,\n            location: location,\n            custom_class: customClass,\n        });\n    }\n    /**\n     * Parse the project from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .project;\n    }\n    /**\n     * Parse the location from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .location;\n    }\n    /**\n     * Parse the custom_class from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the custom_class.\n     */\n    matchCustomClassFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .custom_class;\n    }\n    /**\n     * Return a fully-qualified location resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    locationPath(project, location) {\n        return this.pathTemplates.locationPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).project;\n    }\n    /**\n     * Parse the location from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).location;\n    }\n    /**\n     * Return a fully-qualified phraseSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} phrase_set\n     * @returns {string} Resource name string.\n     */\n    phraseSetPath(project, location, phraseSet) {\n        return this.pathTemplates.phraseSetPathTemplate.render({\n            project: project,\n            location: location,\n            phrase_set: phraseSet,\n        });\n    }\n    /**\n     * Parse the project from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .project;\n    }\n    /**\n     * Parse the location from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .location;\n    }\n    /**\n     * Parse the phrase_set from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the phrase_set.\n     */\n    matchPhraseSetFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .phrase_set;\n    }\n    /**\n     * Return a fully-qualified project resource name string.\n     *\n     * @param {string} project\n     * @returns {string} Resource name string.\n     */\n    projectPath(project) {\n        return this.pathTemplates.projectPathTemplate.render({\n            project: project,\n        });\n    }\n    /**\n     * Parse the project from Project resource.\n     *\n     * @param {string} projectName\n     *   A fully-qualified path representing Project resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProjectName(projectName) {\n        return this.pathTemplates.projectPathTemplate.match(projectName).project;\n    }\n    /**\n     * Return a fully-qualified recognizer resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} recognizer\n     * @returns {string} Resource name string.\n     */\n    recognizerPath(project, location, recognizer) {\n        return this.pathTemplates.recognizerPathTemplate.render({\n            project: project,\n            location: location,\n            recognizer: recognizer,\n        });\n    }\n    /**\n     * Parse the project from Recognizer resource.\n     *\n     * @param {string} recognizerName\n     *   A fully-qualified path representing Recognizer resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromRecognizerName(recognizerName) {\n        return this.pathTemplates.recognizerPathTemplate.match(recognizerName)\n            .project;\n    }\n    /**\n     * Parse the location from Recognizer resource.\n     *\n     * @param {string} recognizerName\n     *   A fully-qualified path representing Recognizer resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromRecognizerName(recognizerName) {\n        return this.pathTemplates.recognizerPathTemplate.match(recognizerName)\n            .location;\n    }\n    /**\n     * Parse the recognizer from Recognizer resource.\n     *\n     * @param {string} recognizerName\n     *   A fully-qualified path representing Recognizer resource.\n     * @returns {string} A string representing the recognizer.\n     */\n    matchRecognizerFromRecognizerName(recognizerName) {\n        return this.pathTemplates.recognizerPathTemplate.match(recognizerName)\n            .recognizer;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.speechStub && !this._terminated) {\n            return this.speechStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.locationsClient.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.SpeechClient = SpeechClient;\n//# sourceMappingURL=speech_client.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5078, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40google-cloud/speech/build/src/v2/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2025 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechClient = void 0;\nvar speech_client_1 = require(\"./speech_client\");\nObject.defineProperty(exports, \"SpeechClient\", { enumerable: true, get: function () { return speech_client_1.SpeechClient; } });\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAC5E,iEAAiE;AACjE,qDAAqD;AACrD,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,YAAY,GAAG,KAAK;AAC5B,IAAI;AACJ,OAAO,cAAc,CAAC,SAAS,gBAAgB;IAAE,YAAY;IAAM,KAAK;QAAc,OAAO,gBAAgB,YAAY;IAAE;AAAE,IAC7H,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5112, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40google-cloud/speech/build/src/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2018 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.protos = exports.AdaptationClient = exports.SpeechClient = exports.v2 = exports.v1p1beta1 = exports.v1 = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst v1p1beta1 = require(\"./v1p1beta1\");\nexports.v1p1beta1 = v1p1beta1;\nconst v1 = require(\"./v1\");\nexports.v1 = v1;\nconst v2 = require(\"./v2\");\nexports.v2 = v2;\n// The following code is adapted from http://www.typescriptlang.org/docs/handbook/mixins.html\n// tslint:disable-next-line no-any\nObject.defineProperty(v1.SpeechClient.prototype, 'streamingRecognize', Object.getOwnPropertyDescriptor(helpers_1.ImprovedStreamingClient.prototype, 'streamingRecognize'));\nObject.defineProperty(v1p1beta1.SpeechClient.prototype, 'streamingRecognize', Object.getOwnPropertyDescriptor(helpers_1.ImprovedStreamingClient.prototype, 'streamingRecognize'));\nObject.defineProperty(v2.SpeechClient.prototype, 'streamingRecognize', Object.getOwnPropertyDescriptor(helpers_1.ImprovedStreamingClient.prototype, 'streamingRecognize'));\nconst SpeechClient = v1.SpeechClient;\nexports.SpeechClient = SpeechClient;\nconst AdaptationClient = v1.AdaptationClient;\nexports.AdaptationClient = AdaptationClient;\n// For compatibility with JavaScript libraries we need to provide this default export:\n// tslint:disable-next-line no-default-export\nexports.default = { v1, v1p1beta1, v2, SpeechClient, AdaptationClient };\nconst protos = require(\"../protos/protos\");\nexports.protos = protos;\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"AAAA;AACA,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,MAAM,GAAG,QAAQ,gBAAgB,GAAG,QAAQ,YAAY,GAAG,QAAQ,EAAE,GAAG,QAAQ,SAAS,GAAG,QAAQ,EAAE,GAAG,KAAK;AACtH,MAAM;AACN,MAAM;AACN,QAAQ,SAAS,GAAG;AACpB,MAAM;AACN,QAAQ,EAAE,GAAG;AACb,MAAM;AACN,QAAQ,EAAE,GAAG;AACb,6FAA6F;AAC7F,kCAAkC;AAClC,OAAO,cAAc,CAAC,GAAG,YAAY,CAAC,SAAS,EAAE,sBAAsB,OAAO,wBAAwB,CAAC,UAAU,uBAAuB,CAAC,SAAS,EAAE;AACpJ,OAAO,cAAc,CAAC,UAAU,YAAY,CAAC,SAAS,EAAE,sBAAsB,OAAO,wBAAwB,CAAC,UAAU,uBAAuB,CAAC,SAAS,EAAE;AAC3J,OAAO,cAAc,CAAC,GAAG,YAAY,CAAC,SAAS,EAAE,sBAAsB,OAAO,wBAAwB,CAAC,UAAU,uBAAuB,CAAC,SAAS,EAAE;AACpJ,MAAM,eAAe,GAAG,YAAY;AACpC,QAAQ,YAAY,GAAG;AACvB,MAAM,mBAAmB,GAAG,gBAAgB;AAC5C,QAAQ,gBAAgB,GAAG;AAC3B,sFAAsF;AACtF,6CAA6C;AAC7C,QAAQ,OAAO,GAAG;IAAE;IAAI;IAAW;IAAI;IAAc;AAAiB;AACtE,MAAM;AACN,QAAQ,MAAM,GAAG,QACjB,iCAAiC","ignoreList":[0],"debugId":null}}]
}